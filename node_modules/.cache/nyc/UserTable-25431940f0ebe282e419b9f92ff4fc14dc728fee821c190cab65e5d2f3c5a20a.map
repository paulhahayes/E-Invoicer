{"version":3,"file":"/Users/yusramahomed/Desktop/SENG2021/se2021-23t1-einvoicing-api-h10a_CHEESECAKE-storage-api/src/service/UserTable.ts","sources":["/Users/yusramahomed/Desktop/SENG2021/se2021-23t1-einvoicing-api-h10a_CHEESECAKE-storage-api/src/service/UserTable.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAAwC;AAExC,kDAA4B;AACrB,IAAM,aAAa,GAAG;;;;;;gBAEnB,aAAkB,EAAE,CAAC;gBACL,qBAAM,aAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAA;;gBAAlD,aAAa,GAAG,SAAkC;gBACxD,aAAa,CAAC,OAAO,CAAC,UAAC,GAAQ,IAAK,OAAA,UAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAzB,CAAyB,CAAC,CAAC;gBAC/D,sBAAO,UAAQ,EAAC;;;gBAEhB,sBAAO,IAAI,KAAK,CAAC,OAAK,CAAC,OAAO,CAAC,EAAC;;;;KAEnC,CAAC;AATW,QAAA,aAAa,iBASxB;AAEK,IAAM,aAAa,GAAG,UAAO,MAAc;;;;;;gBAExC,aAAkB,EAAE,CAAC;gBACL,qBAAM,aAAE;yBAC3B,UAAU,CAAC,OAAO,CAAC;yBACnB,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC;yBAC7B,GAAG,EAAE,EAAA;;gBAHF,aAAa,GAAG,SAGd;gBACR,aAAa,CAAC,OAAO,CAAC,UAAC,GAAQ;oBAC7B,UAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC5B,CAAC,CAAC,CAAC;gBACH,sBAAO,UAAQ,CAAC,CAAC,CAAC,EAAC;;;gBAEnB,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,OAAK,CAAC,CAAC;;;;;KAErD,CAAC;AAdW,QAAA,aAAa,iBAcxB;AAEK,IAAM,gBAAgB,GAAG,UAAO,KAAa;;;;oBAC5B,qBAAM,aAAE;qBAC3B,UAAU,CAAC,OAAO,CAAC;qBACnB,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC;qBAC3B,GAAG,EAAE,EAAA;;gBAHF,aAAa,GAAG,SAGd;gBACR,IAAI,aAAa,CAAC,KAAK,EAAE;oBACvB,sBAAO,KAAK,EAAC;iBACd;qBAAM;oBACL,sBAAO,IAAI,EAAC;iBACb;;;;KACF,CAAC;AAVW,QAAA,gBAAgB,oBAU3B;AAEK,IAAM,cAAc,GAAG;;;;oBACN,qBAAM,aAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAA;;gBAAlD,aAAa,GAAG,SAAkC;gBACxD,sBAAO,aAAa,CAAC,IAAI,EAAC;;;KAC3B,CAAC;AAHW,QAAA,cAAc,kBAGzB;AAEK,IAAM,eAAe,GAAG,UAAO,KAAa,EAAE,QAAgB;;;;oBAC7C,qBAAM,aAAE;qBAC3B,UAAU,CAAC,OAAO,CAAC;qBACnB,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC;qBAC3B,GAAG,EAAE,EAAA;;gBAHF,aAAa,GAAG,SAGd;qBACJ,aAAa,CAAC,KAAK,EAAnB,wBAAmB;gBACrB,sBAAO,KAAK,EAAC;;gBAEP,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBACxC,iBAAiB,GAAG,QAAQ,CAAC,QAAQ,CAAC;gBAC9B,qBAAM,gBAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,iBAAiB,CAAC,EAAA;;gBAAzD,KAAK,GAAG,SAAiD;gBAC/D,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,sBAAO,KAAK,EAAC;;;KAEhB,CAAC;AAdW,QAAA,eAAe,mBAc1B","sourcesContent":["import { db } from \"../config/firebase\";\nimport HTTPError from \"http-errors\";\nimport bcrypt from \"bcrypt\";\nexport const queryAllUsers = async () => {\n  try {\n    const allUsers: any[] = [];\n    const querySnapshot = await db.collection(\"users\").get();\n    querySnapshot.forEach((doc: any) => allUsers.push(doc.data()));\n    return allUsers;\n  } catch (error) {\n    return new Error(error.message);\n  }\n};\n\nexport const queryUserById = async (userId: string) => {\n  try {\n    const userData: any[] = [];\n    const querySnapshot = await db\n      .collection(\"users\")\n      .where(\"userId\", \"==\", userId)\n      .get();\n    querySnapshot.forEach((doc: any) => {\n      userData.push(doc.data());\n    });\n    return userData[0];\n  } catch (error) {\n    console.log(\"Error querying user by ID: \", error);\n  }\n};\n\nexport const queryUserByEmail = async (email: string) => {\n  const querySnapshot = await db\n    .collection(\"users\")\n    .where(\"email\", \"==\", email)\n    .get();\n  if (querySnapshot.empty) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport const queryUserCount = async () => {\n  const querySnapshot = await db.collection(\"users\").get();\n  return querySnapshot.size;\n};\n\nexport const queryLoginValid = async (email: string, password: string) => {\n  const querySnapshot = await db\n    .collection(\"users\")\n    .where(\"email\", \"==\", email)\n    .get();\n  if (querySnapshot.empty) {\n    return false;\n  } else {\n    const userData = querySnapshot.docs[0].data();\n    const encrpytedPassword = userData.password;\n    const valid = await bcrypt.compare(password, encrpytedPassword);\n    console.log(valid);\n    return valid;\n  }\n};\n"]}