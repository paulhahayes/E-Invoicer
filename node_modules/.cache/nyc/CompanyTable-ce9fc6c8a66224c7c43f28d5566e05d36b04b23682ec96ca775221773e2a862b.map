{"version":3,"file":"/Users/yusramahomed/Desktop/SENG2021/se2021-23t1-einvoicing-api-h10a_CHEESECAKE-storage-api/src/service/CompanyTable.ts","sources":["/Users/yusramahomed/Desktop/SENG2021/se2021-23t1-einvoicing-api-h10a_CHEESECAKE-storage-api/src/service/CompanyTable.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAAwC;AAGjC,IAAM,gBAAgB,GAAG;;;;oBACR,qBAAM,aAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,EAAA;;gBAAtD,aAAa,GAAG,SAAsC;gBACtD,SAAS,GAAG,EAAE,CAAC;gBACrB,aAAa,CAAC,OAAO,CAAC,UAAC,GAAG;oBACxB,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC;gBACH,sBAAO,SAAS,EAAC;;;KAClB,CAAC;AAPW,QAAA,gBAAgB,oBAO3B;AAEK,IAAM,kBAAkB,GAAG,UAAO,WAAmB;;;;oBACpC,qBAAM,aAAE;qBAC3B,UAAU,CAAC,WAAW,CAAC;qBACvB,KAAK,CAAC,aAAa,EAAE,IAAI,EAAE,WAAW,CAAC;qBACvC,GAAG,EAAE,EAAA;;gBAHF,aAAa,GAAG,SAGd;gBACR,IAAI,aAAa,CAAC,KAAK,EAAE;oBACvB,sBAAO,KAAK,EAAC;iBACd;qBAAM;oBACL,sBAAO,IAAI,EAAC;iBACb;;;;KACF,CAAC;AAVW,QAAA,kBAAkB,sBAU7B;AAEK,IAAM,iBAAiB,GAAG;;;;oBACT,qBAAM,aAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,EAAA;;gBAAtD,aAAa,GAAG,SAAsC;gBAC5D,sBAAO,aAAa,CAAC,IAAI,EAAC;;;KAC3B,CAAC;AAHW,QAAA,iBAAiB,qBAG5B;AAEK,IAAM,qBAAqB,GAAG,UAAO,UAAkB;;;;oBACtC,qBAAM,aAAE;qBAC3B,UAAU,CAAC,WAAW,CAAC;qBACvB,KAAK,CAAC,YAAY,EAAE,IAAI,EAAE,UAAU,CAAC;qBACrC,GAAG,EAAE,EAAA;;gBAHF,aAAa,GAAG,SAGd;gBACR,IAAI,aAAa,CAAC,KAAK,EAAE;oBACvB,sBAAO,KAAK,EAAC;iBACd;qBAAM;oBACL,sBAAO,IAAI,EAAC;iBACb;;;;KACF,CAAC;AAVW,QAAA,qBAAqB,yBAUhC","sourcesContent":["import { db } from \"../config/firebase\";\nimport HTTPError from \"http-errors\";\n\nexport const queryAllCompanys = async () => {\n  const querySnapshot = await db.collection(\"companies\").get();\n  const companies = [];\n  querySnapshot.forEach((doc) => {\n    companies.push(doc.data());\n  });\n  return companies;\n};\n\nexport const queryCompanyExists = async (companyName: string) => {\n  const querySnapshot = await db\n    .collection(\"companies\")\n    .where(\"companyName\", \"==\", companyName)\n    .get();\n  if (querySnapshot.empty) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport const queryCompanyCount = async () => {\n  const querySnapshot = await db.collection(\"companies\").get();\n  return querySnapshot.size;\n};\n\nexport const queryUserByCompanyKey = async (companyKey: string) => {\n  const querySnapshot = await db\n    .collection(\"companies\")\n    .where(\"companyKey\", \"==\", companyKey)\n    .get();\n  if (querySnapshot.empty) {\n    return false;\n  } else {\n    return true;\n  }\n};\n"]}