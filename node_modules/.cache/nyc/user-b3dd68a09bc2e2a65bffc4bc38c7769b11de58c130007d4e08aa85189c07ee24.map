{"version":3,"file":"/Users/yusramahomed/Desktop/seng2021--/se2021-23t1-einvoicing-api-h10a_CHEESECAKE-storage-api/src/functions/user.ts","sources":["/Users/yusramahomed/Desktop/seng2021--/se2021-23t1-einvoicing-api-h10a_CHEESECAKE-storage-api/src/functions/user.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,4DAAoC;AAEpC,kDAAoE;AAEpE,SAAe,WAAW;;;;wBACjB,qBAAM,IAAA,yBAAa,GAAE,EAAA;wBAA5B,sBAAO,SAAqB,EAAC;;;;CAC9B;AAYQ,kCAAW;AAVpB,SAAe,WAAW,CAAC,MAAc;;;;;wBACzB,qBAAM,IAAA,yBAAa,EAAC,MAAM,CAAC,EAAA;;oBAAnC,KAAK,GAAG,SAA2B;oBAEzC,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;wBACrB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC;qBACzC;yBAAM;wBACL,sBAAO,KAAK,CAAC,CAAC,CAAC,EAAC;qBACjB;;;;;CACF;AAEqB,kCAAW","sourcesContent":["import HTTPError from \"http-errors\";\nimport { UserType } from \"../models/user\";\nimport { queryAllUsers, queryUserById } from \"../service/UserTable\";\n\nasync function getAllUsers() {\n  return await queryAllUsers();\n}\n\nasync function getUserById(userId: string) {\n  const users = await queryUserById(userId);\n\n  if (users.length == 0) {\n    throw HTTPError(404, \"User not found.\");\n  } else {\n    return users[0];\n  }\n}\n\nexport { getAllUsers, getUserById };\n"]}