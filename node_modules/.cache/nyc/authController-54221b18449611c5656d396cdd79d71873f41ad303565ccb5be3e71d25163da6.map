{"version":3,"file":"/Users/yusramahomed/Desktop/seng2021--/se2021-23t1-einvoicing-api-h10a_CHEESECAKE-storage-api/src/controllers/authController.ts","sources":["/Users/yusramahomed/Desktop/seng2021--/se2021-23t1-einvoicing-api-h10a_CHEESECAKE-storage-api/src/controllers/authController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,0CAK2B;AAEpB,IAAM,eAAe,GAAG,UAAO,GAAY,EAAE,GAAa;;;;;gBACzD,KAAmD,GAAG,CAAC,IAAI,EAAzD,WAAW,iBAAA,EAAE,YAAY,kBAAA,EAAE,YAAY,kBAAA,EAAE,GAAG,SAAA,CAAc;;;;gBAEjD,qBAAM,IAAA,0BAAmB,EACtC,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,GAAG,CACJ,EAAA;;gBALK,MAAM,GAAG,SAKd;gBACD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;;;gBAEjB,GAAG,CAAC,MAAM,CAAC,OAAK,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,OAAK,CAAC,OAAO,EAAE,CAAC,CAAC;;;;;KAExE,CAAC;AAbW,QAAA,eAAe,mBAa1B;AAEK,IAAM,YAAY,GAAG,UAAO,GAAY,EAAE,GAAa;;;;;gBACtD,KAAwC,GAAG,CAAC,IAAI,EAA9C,KAAK,WAAA,EAAE,QAAQ,cAAA,EAAE,IAAI,UAAA,EAAE,UAAU,gBAAA,CAAc;;;;gBAEtC,qBAAM,IAAA,mBAAY,EAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC,EAAA;;gBAA9D,MAAM,GAAG,SAAqD;gBACpE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;;;gBAEjB,GAAG,CAAC,MAAM,CAAC,OAAK,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,OAAK,CAAC,OAAO,EAAE,CAAC,CAAC;;;;;KAExE,CAAC;AARW,QAAA,YAAY,gBAQvB;AAEK,IAAM,SAAS,GAAG,UAAO,GAAY,EAAE,GAAa;;;;;gBACnD,KAAsB,GAAG,CAAC,IAAI,EAA5B,KAAK,WAAA,EAAE,QAAQ,cAAA,CAAc;;;;gBAEpB,qBAAM,IAAA,gBAAS,EAAC,KAAK,EAAE,QAAQ,CAAC,EAAA;;gBAAzC,MAAM,GAAG,SAAgC;gBAC/C,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;;;gBAEjB,GAAG,CAAC,MAAM,CAAC,OAAK,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,OAAK,CAAC,OAAO,EAAE,CAAC,CAAC;;;;;KAExE,CAAC;AARW,QAAA,SAAS,aAQpB;AAEK,IAAM,UAAU,GAAG,UAAO,GAAY,EAAE,GAAa;;;;;gBACpD,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;gBAC1C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;;;gBAEF,qBAAM,IAAA,iBAAU,EAAC,KAAK,CAAC,EAAA;;gBAAhC,MAAM,GAAG,SAAuB;gBACtC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;;;gBAEjB,GAAG,CAAC,MAAM,CAAC,OAAK,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,OAAK,CAAC,OAAO,EAAE,CAAC,CAAC;;;;;KAExE,CAAC;AATW,QAAA,UAAU,cASrB","sourcesContent":["import { Response, Request } from \"express\";\n\nimport {\n  authRegisterCompany,\n  authRegister,\n  authLogin,\n  authLogout,\n} from \"../functions/auth\";\n\nexport const registerCompany = async (req: Request, res: Response) => {\n  const { companyName, companyEmail, numEmployees, ABN } = req.body;\n  try {\n    const result = await authRegisterCompany(\n      companyName,\n      companyEmail,\n      numEmployees,\n      ABN\n    );\n    res.json(result);\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n\nexport const registerUser = async (req: Request, res: Response) => {\n  const { email, password, name, companyKey } = req.body;\n  try {\n    const result = await authRegister(email, password, name, companyKey);\n    res.json(result);\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n\nexport const loginUser = async (req: Request, res: Response) => {\n  const { email, password } = req.body;\n  try {\n    const result = await authLogin(email, password);\n    res.json(result);\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n\nexport const logoutUser = async (req: Request, res: Response) => {\n  const token = req.headers.token as string;\n  console.log(token);\n  try {\n    const result = await authLogout(token);\n    res.json(result);\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n"]}