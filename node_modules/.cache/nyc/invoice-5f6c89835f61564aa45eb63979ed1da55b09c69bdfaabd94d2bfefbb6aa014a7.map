{"version":3,"file":"/Users/yusramahomed/Desktop/seng2021--/se2021-23t1-einvoicing-api-h10a_CHEESECAKE-storage-api/src/functions/invoice.ts","sources":["/Users/yusramahomed/Desktop/seng2021--/se2021-23t1-einvoicing-api-h10a_CHEESECAKE-storage-api/src/functions/invoice.ts"],"names":[],"mappings":"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","sourcesContent":["import { nanoid } from \"nanoid\";\nimport { db } from \"../config/firebase\";\nimport HTTPError from \"http-errors\";\nimport { queryUserById } from \"../service/UserTable\";\nimport { queryInvoiceByInvoiceId, queryInvoicesByInvoiceId } from \"../service/InvoiceTable\";\nimport xml2js from 'xml2js';\nimport jwt from \"jsonwebtoken\";\n\n\nasync function authenticateFromDB(token: string) {\n  // connect to db\n  const data = await db.collection(\"users\").get();\n  try {\n    const decodedToken = jwt.verify(token, \"cheesecake\") as jwt.JwtPayload;\n    // return a user id\n    return decodedToken.userId;\n  } catch {\n    throw HTTPError(401, \"Unauthorized: invalid token\");\n  }\n}\n\nasync function storeInvoice(token: string, invoiceXML: string) {\n  const userId = await authenticateFromDB(token);\n  // Get invoice and user information\n  const invoice = db.collection(\"invoices\");\n  const userData =  await queryUserById(userId);\n\n  // Generate new Invoice object  \n  const invoiceId = nanoid();\n  const newInvoice = {\n    invoiceId: invoiceId,\n    invoiceXML: invoiceXML,\n    timeAdded: Math.floor((new Date()).getTime() / 1000),\n    user: {\n      \"userId\": userId,\n      \"companyName\": userData.companyName\n    }\n  }\n  try {\n    await invoice.doc(invoiceId).set(newInvoice);\n  } catch (error) {\n    throw HTTPError(500, error.message);\n  }\n  return { invoiceId: invoiceId };\n}\n\nasync function showInvoice(token: string, invoiceId: string) {\n  const userId = await authenticateFromDB(token);\n  // Get invoice and user information\n  const invoiceData = await queryInvoiceByInvoiceId(invoiceId);\n  const userData = await queryUserById(userId);\n\n  //Check if user has permissions to view invoice (from the company)\n  if (userData.companyName !== invoiceData.user.companyName) {\n    throw HTTPError(403, \"Forbidden: User cannot view this invoice\");\n  }\n\n  // Converts Invoice back to xml \n  const builder = new xml2js.Builder();\n  const xml = builder.buildObject(invoiceData.invoiceXML);\n  return {invoice: xml};\n}\n\nasync function showRangeInvoice(token: string, quantity: number) {\n  const userId = await authenticateFromDB(token);\n  // Get invoices and user information\n  const userData = await queryUserById(userId);\n  const invoices = await queryInvoicesByInvoiceId(userData.companyName, quantity);\n\n  return {invoices: invoices};\n}\n\nasync function deleteInvoice(token: string, invoiceId: string) {\n  const userId = await authenticateFromDB(token);\n  // Get invoice and user information\n  const invoiceData = await queryInvoiceByInvoiceId(invoiceId);\n  const userData = await queryUserById(userId);\n\n  //Check if user has permissions to delete invoice (from the company)\n  if (userData.companyName !== invoiceData.user.companyName) {\n    throw HTTPError(403, \"Forbidden: User cannot delete this invoice\");\n  }\n\n  // Delete invoice\n  const invoiceRef = db.collection(\"invoices\").doc(invoiceId);\n  try {\n    await invoiceRef.delete();\n    return {\"message\": \"Invoice deleted successfully\"};\n  } catch (error) {\n    throw HTTPError(500, error.message);\n  }\n}\n\nexport {showInvoice, deleteInvoice, showRangeInvoice, storeInvoice};"]}