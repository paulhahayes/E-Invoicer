{"/home/paul/Uni/seng2021/project/deployV2/src/app.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/app.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":21}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":36}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":60}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"7":{"start":{"line":11,"column":13},"end":{"line":11,"column":34}},"8":{"start":{"line":12,"column":12},"end":{"line":12,"column":32}},"9":{"start":{"line":14,"column":0},"end":{"line":19,"column":3}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":50}},"11":{"start":{"line":16,"column":4},"end":{"line":18,"column":7}},"12":{"start":{"line":21,"column":15},"end":{"line":23,"column":2}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":70}},"14":{"start":{"line":25,"column":0},"end":{"line":27,"column":3}},"15":{"start":{"line":26,"column":4},"end":{"line":26,"column":72}},"16":{"start":{"line":26,"column":23},"end":{"line":26,"column":70}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":21},"end":{"line":14,"column":22}},"loc":{"start":{"line":14,"column":35},"end":{"line":19,"column":1}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":40},"end":{"line":21,"column":41}},"loc":{"start":{"line":21,"column":46},"end":{"line":23,"column":1}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":21},"end":{"line":25,"column":22}},"loc":{"start":{"line":25,"column":27},"end":{"line":27,"column":1}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":17},"end":{"line":26,"column":18}},"loc":{"start":{"line":26,"column":23},"end":{"line":26,"column":70}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1},"f":{"0":1,"1":0,"2":1,"3":1,"4":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/app.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/app.ts"],"names":[],"mappings":";;;;;;AAEA,qCAAwC;AACxC,6DAAqC;AAErC,yEAAyE;AAE5D,QAAA,GAAG,GAAG,IAAA,qBAAY,GAAE,CAAC;AAClC,MAAM,IAAI,GAAG,gBAAM,CAAC,IAAI,CAAC;AACzB,MAAM,GAAG,GAAG,gBAAM,CAAC,GAAG,CAAC;AACvB,WAAW;AACX,WAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IAC3C,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAC9C,GAAG,CAAC,IAAI,CAAC;QACP,OAAO,EAAE,0CAA0C;KACpD,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,eAAe;AACf,MAAM,MAAM,GAAG,WAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACnC,OAAO,CAAC,GAAG,CAAC,uCAAuC,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC;AAEH,yCAAyC;AACzC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;IACxB,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC","sourcesContent":["import { Request, Response } from 'express';\n\nimport { createServer } from './server';\nimport config from './config/config';\n\n// loads the .env file into to manage the test and production environment\n\nexport const app = createServer();\nconst PORT = config.port;\nconst URL = config.url;\n// Root URL\napp.get('/', (req: Request, res: Response) => {\n  console.log('someone accessed our root url!');\n  res.json({\n    message: \"Welcome to CHEESECAKE Server's root URL!\",\n  });\n});\n\n// start server\nconst server = app.listen(PORT, () => {\n  console.log(`Starting Express Server at the URL: ${URL}:${PORT}`);\n});\n\n// For coverage, handle Ctrl+C gracefully\nprocess.on('SIGINT', () => {\n  server.close(() => console.log('Shutting down server gracefully.'));\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3fc21d2bd9b3e9067cd61450dbe8e392c1a3b8f7","contentHash":"e76159c63ceb70f29aa9114e4dbd4d352390e131b501f28672d331129588b3d7"},"/home/paul/Uni/seng2021/project/deployV2/src/server.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/server.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"6":{"start":{"line":9,"column":18},"end":{"line":9,"column":53}},"7":{"start":{"line":10,"column":33},"end":{"line":10,"column":83}},"8":{"start":{"line":11,"column":17},"end":{"line":11,"column":51}},"9":{"start":{"line":13,"column":24},"end":{"line":13,"column":74}},"10":{"start":{"line":14,"column":21},"end":{"line":14,"column":68}},"11":{"start":{"line":15,"column":21},"end":{"line":15,"column":68}},"12":{"start":{"line":17,"column":29},"end":{"line":17,"column":75}},"13":{"start":{"line":18,"column":24},"end":{"line":18,"column":65}},"14":{"start":{"line":19,"column":25},"end":{"line":19,"column":52}},"15":{"start":{"line":21,"column":22},"end":{"line":21,"column":61}},"16":{"start":{"line":23,"column":16},"end":{"line":23,"column":40}},"17":{"start":{"line":24,"column":4},"end":{"line":24,"column":42}},"18":{"start":{"line":25,"column":4},"end":{"line":25,"column":38}},"19":{"start":{"line":26,"column":4},"end":{"line":26,"column":65}},"20":{"start":{"line":28,"column":4},"end":{"line":28,"column":53}},"21":{"start":{"line":30,"column":4},"end":{"line":30,"column":42}},"22":{"start":{"line":32,"column":17},"end":{"line":32,"column":71}},"23":{"start":{"line":34,"column":4},"end":{"line":34,"column":37}},"24":{"start":{"line":35,"column":4},"end":{"line":35,"column":34}},"25":{"start":{"line":36,"column":4},"end":{"line":36,"column":34}},"26":{"start":{"line":37,"column":4},"end":{"line":37,"column":99}},"27":{"start":{"line":38,"column":4},"end":{"line":38,"column":15}},"28":{"start":{"line":40,"column":0},"end":{"line":40,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"createServer","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":21}},"loc":{"start":{"line":22,"column":24},"end":{"line":39,"column":1}},"line":22}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":10,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1},"f":{"0":10,"1":1},"b":{"0":[1,1,1],"1":[3,7],"2":[10,10]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/server.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/server.ts"],"names":[],"mappings":";;;;;;AAAA,oDAA4B;AAC5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAChB,sDAA8B;AAC9B,oFAAkD;AAClD,oDAA4B;AAE5B,SAAS;AACT,2EAAmD;AACnD,qEAA6C;AAC7C,qEAA6C;AAE7C,SAAS;AACT,4EAA2C;AAC3C,kEAAyC;AACzC,qDAA2C;AAC3C,kDAAkD;AAClD,8DAAqC;AAErC,SAAgB,YAAY;IAC1B,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;IACtB,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;IAC3B,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IACxB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC,CAAC;IAEnD,wBAAwB;IACxB,GAAG,CAAC,GAAG,CAAC,IAAA,gCAAY,GAAE,CAAC,CAAC;IAExB,qBAAqB;IACrB,GAAG,CAAC,GAAG,CAAC,IAAA,gBAAM,EAAC,KAAK,CAAC,CAAC,CAAC;IAEvB,UAAU;IACV,MAAM,IAAI,GAAG,IAAA,uBAAY,EAAC,wBAAO,CAAC,CAAC;IAEnC,SAAS;IACT,GAAG,CAAC,GAAG,CAAC,uBAAa,CAAC,CAAC;IACvB,GAAG,CAAC,GAAG,CAAC,oBAAU,CAAC,CAAC;IACpB,GAAG,CAAC,GAAG,CAAC,oBAAU,CAAC,CAAC;IACpB,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,4BAAS,CAAC,KAAK,EAAE,4BAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAEzD,OAAO,GAAG,CAAC;AACb,CAAC;AAtBD,oCAsBC","sourcesContent":["import dotenv from 'dotenv';\ndotenv.config();\nimport express from 'express';\nimport errorHandler from 'middleware-http-errors';\nimport morgan from 'morgan';\n\n// routes\nimport invoiceRoutes from './routes/invoiceRoutes';\nimport userRoutes from './routes/userRoutes';\nimport authRoutes from './routes/authRoutes';\n\n//Swagger\nimport swaggerUI from 'swagger-ui-express';\nimport swaggerJSDoc from 'swagger-jsdoc';\nimport { options } from './swaggerOptions';\n// import xmlparser from 'express-xml-bodyparser';\nimport bodyParser from 'body-parser';\n\nexport function createServer() {\n  const app = express();\n  app.use(bodyParser.text());\n  app.use(express.json());\n  app.use(express.text({ type: 'application/xml' }));\n\n  // handles errors nicely\n  app.use(errorHandler());\n\n  // for logging errors\n  app.use(morgan('dev'));\n\n  // swagger\n  const spec = swaggerJSDoc(options);\n\n  // routes\n  app.use(invoiceRoutes);\n  app.use(userRoutes);\n  app.use(authRoutes);\n  app.use('/docs', swaggerUI.serve, swaggerUI.setup(spec));\n\n  return app;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1cb1281dc986234a1f6d26101a5c297ede93b336","contentHash":"5b6144a2a84dee64dacf77db2861c7ae987edb4faf21ca349320d73d35e01915"},"/home/paul/Uni/seng2021/project/deployV2/src/routes/invoiceRoutes.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/routes/invoiceRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":61}},"3":{"start":{"line":5,"column":26},"end":{"line":5,"column":67}},"4":{"start":{"line":7,"column":28},"end":{"line":7,"column":71}},"5":{"start":{"line":9,"column":15},"end":{"line":9,"column":38}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":128}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":101}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":100}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":108}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":132}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":96}},"12":{"start":{"line":36,"column":0},"end":{"line":36,"column":53}},"13":{"start":{"line":48,"column":0},"end":{"line":48,"column":25}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/routes/invoiceRoutes.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/routes/invoiceRoutes.ts"],"names":[],"mappings":";;AAAA,qCAAiC;AAEjC,8DAA2D;AAC3D,oEAAiE;AACjE,8BAA8B;AAC9B,wEAQ0C;AAE1C,sBAAsB;AACtB,MAAM,MAAM,GAAW,IAAA,gBAAM,GAAE,CAAC;AAEhC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,2BAAY,EAAE,iCAAe,EAAE,gCAAY,CAAC,CAAC;AAE3E,MAAM,CAAC,GAAG,CAAC,0BAA0B,EAAE,2BAAY,EAAE,+BAAW,CAAC,CAAC;AAElE,MAAM,CAAC,GAAG,CAAC,oBAAoB,EAAE,2BAAY,EAAE,oCAAgB,CAAC,CAAC;AAEjE,MAAM,CAAC,MAAM,CAAC,4BAA4B,EAAE,2BAAY,EAAE,iCAAa,CAAC,CAAC;AAEzE,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,2BAAY,EAAE,iCAAe,EAAE,kCAAc,CAAC,CAAC;AAE/E,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,2BAAY,EAAE,kCAAc,CAAC,CAAC;AAE7D;;;;;;;;;;;;;;;;;;;GAmBG;AACH,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,2BAAO,CAAC,CAAC;AAEjC;;;;;;;;;;GAUG;AAEH,kBAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\nimport { multerConfig } from '../config/multer';\nimport { authenticate } from '../middlewares/authenticate';\nimport { validateInvoice } from '../middlewares/validateInvoice';\n//import multer from \"multer\";\nimport {\n  invoiceShowRange,\n  invoiceShow,\n  invoiceDelete,\n  invoiceStore,\n  invoiceEncrypt,\n  invoiceDecrypt,\n  clearDb,\n} from '../controllers/invoiceController';\n\n// Create a new router\nconst router: Router = Router();\n\nrouter.post('/invoice/store', authenticate, validateInvoice, invoiceStore);\n\nrouter.get('/invoice/show/:invoiceId', authenticate, invoiceShow);\n\nrouter.get('/invoice/showRange', authenticate, invoiceShowRange);\n\nrouter.delete('/invoice/delete/:invoiceId', authenticate, invoiceDelete);\n\nrouter.post('/invoice/encrypt', authenticate, validateInvoice, invoiceEncrypt);\n\nrouter.get('/invoice/decrypt', authenticate, invoiceDecrypt);\n\n/**\n * @swagger\n * /clear:\n *   delete:\n *     summary: Delete all users, companies, and invoices from the database\n *     tags: [Admin]\n *     responses:\n *       200:\n *         description: All data has been deleted from the database\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: A message indicating that all data has been deleted\n *       500:\n *         description: Internal server error\n */\nrouter.delete('/clear', clearDb);\n\n/**\n * TODO:\n * router.get(\n  \"/invoice/upload\",\n  multer(multerConfig).single(\"file\"),\n  (req, res) => {\n    console.log(req.file);\n  }\n);\n\n */\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2b7d3b02429b82499a3faf18bbed37b171283160","contentHash":"bb76f9ae3a7ce9e08a521f30288b911f985a82d0b45b3f2df3faa7306cedf182"},"/home/paul/Uni/seng2021/project/deployV2/src/middlewares/authenticate.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/middlewares/authenticate.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":63}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":51}},"6":{"start":{"line":10,"column":18},"end":{"line":10,"column":35}},"7":{"start":{"line":11,"column":4},"end":{"line":25,"column":5}},"8":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"9":{"start":{"line":13,"column":12},"end":{"line":13,"column":24}},"10":{"start":{"line":15,"column":24},"end":{"line":15,"column":74}},"11":{"start":{"line":16,"column":27},"end":{"line":16,"column":81}},"12":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"13":{"start":{"line":18,"column":12},"end":{"line":18,"column":24}},"14":{"start":{"line":20,"column":8},"end":{"line":20,"column":34}},"15":{"start":{"line":21,"column":8},"end":{"line":21,"column":15}},"16":{"start":{"line":24,"column":8},"end":{"line":24,"column":75}},"17":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"authenticate","decl":{"start":{"line":9,"column":15},"end":{"line":9,"column":27}},"loc":{"start":{"line":9,"column":44},"end":{"line":26,"column":1}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}],"line":12},"4":{"loc":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},{"start":{"line":17,"column":8},"end":{"line":19,"column":9}}],"line":17}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"f":{"0":1,"1":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/middlewares/authenticate.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/middlewares/authenticate.ts"],"names":[],"mappings":";;;;;;AAAA,gEAA+B;AAE/B,oDAAuD;AAGhD,KAAK,UAAU,YAAY,CAChC,GAAY,EACZ,GAAa,EACb,IAAkB;IAElB,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAI;QACF,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,KAAK,CAAC;SACb;QACD,MAAM,OAAO,GAAG,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,CAAmB,CAAC;QAElE,MAAM,UAAU,GAAG,MAAM,IAAA,2BAAe,EAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACzD,IAAI,CAAC,UAAU,EAAE;YACf,MAAM,KAAK,CAAC;SACb;QAEA,GAAW,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;QAEnC,IAAI,EAAE,CAAC;KACR;IAAC,OAAO,GAAG,EAAE;QACZ,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC,EAAE,CAAC;KACpE;AACH,CAAC;AAvBD,oCAuBC","sourcesContent":["import jwt from 'jsonwebtoken';\nimport { Response, Request, NextFunction } from 'express';\nimport { queryUserExists } from '../service/UserTable';\nimport HTTPError from 'http-errors';\n\nexport async function authenticate(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  const token = req.headers.token as string;\n  try {\n    if (!token) {\n      throw Error;\n    }\n    const decoded = jwt.verify(token, 'cheesecake') as jwt.JwtPayload;\n\n    const userExists = await queryUserExists(decoded.userId);\n    if (!userExists) {\n      throw Error;\n    }\n\n    (req as any).user = decoded.userId;\n\n    next();\n  } catch (err) {\n    return { res: res.status(401).json({ message: 'Invalid token' }) };\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e07598c8b8f6119fce8b0383de1958a99618da8b","contentHash":"55d9dd3ee698b0e7b9090ba6619472b3dd0fcfd8ec63a318e579f5c8a7e9861e"},"/home/paul/Uni/seng2021/project/deployV2/src/service/UserTable.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/service/UserTable.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":134}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":48}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":51}},"6":{"start":{"line":9,"column":22},"end":{"line":9,"column":61}},"7":{"start":{"line":11,"column":25},"end":{"line":28,"column":1}},"8":{"start":{"line":12,"column":4},"end":{"line":27,"column":5}},"9":{"start":{"line":13,"column":30},"end":{"line":16,"column":18}},"10":{"start":{"line":17,"column":8},"end":{"line":22,"column":9}},"11":{"start":{"line":18,"column":12},"end":{"line":18,"column":25}},"12":{"start":{"line":21,"column":12},"end":{"line":21,"column":24}},"13":{"start":{"line":25,"column":8},"end":{"line":25,"column":38}},"14":{"start":{"line":26,"column":8},"end":{"line":26,"column":61}},"15":{"start":{"line":29,"column":0},"end":{"line":29,"column":44}},"16":{"start":{"line":31,"column":24},"end":{"line":51,"column":1}},"17":{"start":{"line":32,"column":4},"end":{"line":50,"column":5}},"18":{"start":{"line":33,"column":30},"end":{"line":36,"column":18}},"19":{"start":{"line":37,"column":8},"end":{"line":45,"column":9}},"20":{"start":{"line":38,"column":12},"end":{"line":38,"column":25}},"21":{"start":{"line":41,"column":29},"end":{"line":41,"column":57}},"22":{"start":{"line":42,"column":38},"end":{"line":42,"column":51}},"23":{"start":{"line":43,"column":26},"end":{"line":43,"column":85}},"24":{"start":{"line":44,"column":12},"end":{"line":44,"column":25}},"25":{"start":{"line":48,"column":8},"end":{"line":48,"column":38}},"26":{"start":{"line":49,"column":8},"end":{"line":49,"column":61}},"27":{"start":{"line":52,"column":0},"end":{"line":52,"column":42}},"28":{"start":{"line":54,"column":22},"end":{"line":62,"column":1}},"29":{"start":{"line":55,"column":4},"end":{"line":61,"column":5}},"30":{"start":{"line":56,"column":30},"end":{"line":56,"column":87}},"31":{"start":{"line":57,"column":8},"end":{"line":57,"column":36}},"32":{"start":{"line":60,"column":8},"end":{"line":60,"column":64}},"33":{"start":{"line":63,"column":0},"end":{"line":63,"column":38}},"34":{"start":{"line":65,"column":22},"end":{"line":76,"column":1}},"35":{"start":{"line":66,"column":4},"end":{"line":75,"column":5}},"36":{"start":{"line":67,"column":25},"end":{"line":67,"column":27}},"37":{"start":{"line":68,"column":30},"end":{"line":68,"column":75}},"38":{"start":{"line":69,"column":8},"end":{"line":69,"column":66}},"39":{"start":{"line":69,"column":39},"end":{"line":69,"column":64}},"40":{"start":{"line":70,"column":8},"end":{"line":70,"column":24}},"41":{"start":{"line":73,"column":8},"end":{"line":73,"column":38}},"42":{"start":{"line":74,"column":8},"end":{"line":74,"column":61}},"43":{"start":{"line":77,"column":0},"end":{"line":77,"column":38}},"44":{"start":{"line":78,"column":24},"end":{"line":86,"column":1}},"45":{"start":{"line":79,"column":4},"end":{"line":85,"column":5}},"46":{"start":{"line":80,"column":30},"end":{"line":80,"column":87}},"47":{"start":{"line":81,"column":8},"end":{"line":81,"column":36}},"48":{"start":{"line":84,"column":8},"end":{"line":84,"column":69}},"49":{"start":{"line":87,"column":0},"end":{"line":87,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":25},"end":{"line":11,"column":26}},"loc":{"start":{"line":11,"column":42},"end":{"line":28,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":24},"end":{"line":31,"column":25}},"loc":{"start":{"line":31,"column":51},"end":{"line":51,"column":1}},"line":31},"3":{"name":"(anonymous_3)","decl":{"start":{"line":54,"column":22},"end":{"line":54,"column":23}},"loc":{"start":{"line":54,"column":40},"end":{"line":62,"column":1}},"line":54},"4":{"name":"(anonymous_4)","decl":{"start":{"line":65,"column":22},"end":{"line":65,"column":23}},"loc":{"start":{"line":65,"column":34},"end":{"line":76,"column":1}},"line":65},"5":{"name":"(anonymous_5)","decl":{"start":{"line":69,"column":30},"end":{"line":69,"column":31}},"loc":{"start":{"line":69,"column":39},"end":{"line":69,"column":64}},"line":69},"6":{"name":"(anonymous_6)","decl":{"start":{"line":78,"column":24},"end":{"line":78,"column":25}},"loc":{"start":{"line":78,"column":42},"end":{"line":86,"column":1}},"line":78}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":17,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":22,"column":9}},{"start":{"line":17,"column":8},"end":{"line":22,"column":9}}],"line":17},"4":{"loc":{"start":{"line":37,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":45,"column":9}},{"start":{"line":37,"column":8},"end":{"line":45,"column":9}}],"line":37}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":1,"45":0,"46":0,"47":0,"48":0,"49":1},"f":{"0":2,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/service/UserTable.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/service/UserTable.ts"],"names":[],"mappings":"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","sourcesContent":["import { db } from '../config/firebase';\nimport bcrypt from 'bcrypt';\nimport HTTPError from 'http-errors';\nimport { UserType } from '../models/user';\n// userRegister: checks if email has been registered\nexport const queryUserByEmail = async (email: string) => {\n  try {\n    const querySnapshot = await db\n      .collection('users')\n      .where('email', '==', email)\n      .get();\n    if (querySnapshot.empty) {\n      return false;\n    } else {\n      return true;\n    }\n  } catch (error) {\n    console.log('Error querying');\n    throw HTTPError(500, error.message);\n  }\n};\n\n// authorisation in userLogin: checks if email and password are correct\nexport const queryLoginValid = async (email: string, password: string) => {\n  try {\n    const querySnapshot = await db\n      .collection('users')\n      .where('email', '==', email)\n      .get();\n    if (querySnapshot.empty) {\n      return false;\n    } else {\n      const userData = querySnapshot.docs[0].data();\n      const encrpytedPassword = userData.hash;\n      const valid = await bcrypt.compare(password, encrpytedPassword);\n      return valid;\n    }\n  } catch (error) {\n    console.log('Error querying');\n    throw HTTPError(500, error.message);\n  }\n};\n\n// InvoiceStore/Show/showRange/delete: Returns userData given userId\nexport const queryUserById = async (userId: string) => {\n  try {\n    const querySnapshot = await db.collection('users').doc(userId).get();\n    return querySnapshot.data();\n  } catch (error) {\n    throw HTTPError(404, 'User not found');\n  }\n};\n\n// Used in getAllUsers\nexport const queryAllUsers = async () => {\n  try {\n    const allUsers: UserType[] = [];\n    const querySnapshot = await db.collection('users').get();\n    querySnapshot.forEach((doc: any) => allUsers.push(doc.data()));\n    return allUsers;\n  } catch (error) {\n    console.log('Error querying');\n    throw HTTPError(500, error.message);\n  }\n};\n\nexport const queryUserExists = async (userId: string) => {\n  try {\n    const querySnapshot = await db.collection('users').doc(userId).get();\n    return querySnapshot.exists;\n  } catch (error) {\n    throw HTTPError(403, 'User does not exist');\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6ef6afeb8b5b634ba22176a4c86097527e7a790c","contentHash":"f0e82e17cade84aebe1f5e198bdcca7488fd4913480eb52568f0b1c08056f04c"},"/home/paul/Uni/seng2021/project/deployV2/src/config/firebase.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/config/firebase.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":36}},"26":{"start":{"line":27,"column":14},"end":{"line":27,"column":53}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":22}},"28":{"start":{"line":29,"column":21},"end":{"line":29,"column":46}},"29":{"start":{"line":31,"column":0},"end":{"line":39,"column":1}},"30":{"start":{"line":32,"column":4},"end":{"line":32,"column":64}},"31":{"start":{"line":34,"column":5},"end":{"line":39,"column":1}},"32":{"start":{"line":35,"column":4},"end":{"line":35,"column":64}},"33":{"start":{"line":38,"column":4},"end":{"line":38,"column":84}},"34":{"start":{"line":40,"column":0},"end":{"line":42,"column":3}},"35":{"start":{"line":43,"column":11},"end":{"line":43,"column":28}},"36":{"start":{"line":44,"column":0},"end":{"line":44,"column":16}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":31,"column":0},"end":{"line":39,"column":1}},"type":"if","locations":[{"start":{"line":31,"column":0},"end":{"line":39,"column":1}},{"start":{"line":31,"column":0},"end":{"line":39,"column":1}}],"line":31},"17":{"loc":{"start":{"line":34,"column":5},"end":{"line":39,"column":1}},"type":"if","locations":[{"start":{"line":34,"column":5},"end":{"line":39,"column":1}},{"start":{"line":34,"column":5},"end":{"line":39,"column":1}}],"line":34}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":0,"31":1,"32":1,"33":0,"34":1,"35":1,"36":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":1},"b":{"0":[1,1,1],"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[1,0],"12":[1,1],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,1],"17":[1,0]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/config/firebase.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/config/firebase.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sDAAwC;AAqB/B,sBAAK;AAnBd,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;AAC/C,IAAI,iBAAiB,CAAC;AAEtB,IAAI,YAAY,KAAK,YAAY,EAAE;IACjC,iBAAiB,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;CAC7D;KAAM,IAAI,YAAY,KAAK,MAAM,EAAE;IAClC,iBAAiB,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;CAC7D;KAAM;IACL,MAAM,IAAI,KAAK,CACb,8DAA8D,CAC/D,CAAC;CACH;AAED,KAAK,CAAC,aAAa,CAAC;IAClB,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC;CACrD,CAAC,CAAC;AAEH,MAAM,EAAE,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;AAEb,gBAAE","sourcesContent":["import * as admin from 'firebase-admin';\n\nconst firestoreEnv = process.env.FIRESTORE_ENV;\nlet serviceAccountKey;\n\nif (firestoreEnv === 'production') {\n  serviceAccountKey = require(process.env.PROD_FIRESTORE_KEY);\n} else if (firestoreEnv === 'test') {\n  serviceAccountKey = require(process.env.TEST_FIRESTORE_KEY);\n} else {\n  throw new Error(\n    'Invalid FIRESTORE_ENV value. Must be \"production\" or \"test\".'\n  );\n}\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccountKey),\n});\n\nconst db = admin.firestore();\n\nexport { admin, db };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5caed95458dcccf64f63bab59affcbf2b9eb1cab","contentHash":"0a7b2bea7970b00e4df8ad6e5a35229e3a73bf9515ccf3f98f5a303b5c2bc12b"},"/home/paul/Uni/seng2021/project/deployV2/src/middlewares/validateInvoice.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/middlewares/validateInvoice.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":14},"end":{"line":8,"column":31}},"6":{"start":{"line":11,"column":4},"end":{"line":49,"column":5}},"7":{"start":{"line":12,"column":20},"end":{"line":12,"column":28}},"8":{"start":{"line":13,"column":30},"end":{"line":13,"column":77}},"9":{"start":{"line":14,"column":20},"end":{"line":14,"column":48}},"10":{"start":{"line":16,"column":27},"end":{"line":24,"column":18}},"11":{"start":{"line":26,"column":25},"end":{"line":28,"column":10}},"12":{"start":{"line":30,"column":26},"end":{"line":30,"column":39}},"13":{"start":{"line":31,"column":24},"end":{"line":31,"column":79}},"14":{"start":{"line":32,"column":23},"end":{"line":32,"column":106}},"15":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"16":{"start":{"line":34,"column":12},"end":{"line":34,"column":24}},"17":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"18":{"start":{"line":37,"column":12},"end":{"line":37,"column":45}},"19":{"start":{"line":39,"column":8},"end":{"line":39,"column":15}},"20":{"start":{"line":42,"column":8},"end":{"line":48,"column":10}},"21":{"start":{"line":51,"column":0},"end":{"line":51,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"validateInvoice","decl":{"start":{"line":10,"column":15},"end":{"line":10,"column":30}},"loc":{"start":{"line":10,"column":47},"end":{"line":50,"column":1}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},{"start":{"line":33,"column":8},"end":{"line":35,"column":9}}],"line":33},"4":{"loc":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},{"start":{"line":36,"column":8},"end":{"line":38,"column":9}}],"line":36}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"f":{"0":1,"1":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/middlewares/validateInvoice.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/middlewares/validateInvoice.ts"],"names":[],"mappings":";;;;;;AACA,kDAA0B;AAC1B,IAAI,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAEhC,yFAAyF;AAClF,KAAK,UAAU,eAAe,CACnC,GAAY,EACZ,GAAa,EACb,IAAkB;IAElB,IAAI;QACF,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;QACrB,IAAI,eAAe,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAEtE,IAAI,KAAK,GAAG,4BAA4B,CAAC;QAEzC,iBAAiB;QACjB,MAAM,UAAU,GAAG;;;yGAGkF,KAAK;WACnG,eAAe;;;;kBAIR,CAAC;QACf,eAAe;QACf,MAAM,QAAQ,GAAG,MAAM,eAAK,CAAC,IAAI,CAC/B,iCAAiC,EACjC,UAAU,EACV;YACE,OAAO,EAAE,EAAE,cAAc,EAAE,UAAU,EAAE;SACxC,CACF,CAAC;QACF,WAAW;QACX,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC;QAChC,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QACxE,MAAM,MAAM,GACV,OAAO,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,CAAC,wBAAwB,CAAC,CAAC,aAAa,CAAC,CACtE,SAAS,CACV,CAAC;QACJ,IAAI,MAAM,KAAK,OAAO,EAAE;YACtB,MAAM,KAAK,CAAC;SACb;QACD,IAAI,MAAM,KAAK,MAAM,EAAE;YACrB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;SAClC;QACD,IAAI,EAAE,CAAC;KACR;IAAC,OAAO,GAAG,EAAE;QACZ,OAAO;YACL,GAAG,EAAE,GAAG;iBACL,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC;gBACJ,OAAO,EACL,qEAAqE;aACxE,CAAC;SACL,CAAC;KACH;AACH,CAAC;AArDD,0CAqDC","sourcesContent":["import { Response, Request, NextFunction } from 'express';\nimport axios from 'axios';\nvar convert = require('xml-js');\n\n// industrial grade invoice validation middleware  // not functional cause swagger issues\nexport async function validateInvoice(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    const xml = req.body;\n    let apiFormattedxml = xml.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n    let VESID = 'org.oasis-open:invoice:2.1';\n\n    // set up request\n    const apiRequest = `<?xml version=\"1.0\"?>\n    <S:Envelope xmlns:S=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <S:Body>\n    <validateRequestInput xmlns=\"http://peppol.helger.com/ws/documentvalidationservice/201701/\" VESID=\"${VESID}\" displayLocale=\"en\">\n    <XML>${apiFormattedxml}\n    </XML>\n    </validateRequestInput>\n    </S:Body>\n    </S:Envelope>`;\n    // send request\n    const response = await axios.post(\n      'https://peppol.helger.com/wsdvs',\n      apiRequest,\n      {\n        headers: { 'Content-Type': 'text/xml' },\n      }\n    );\n    // response\n    const xmlString = response.data;\n    const jsonXml = convert.xml2js(xmlString, { compact: true, spaces: 4 });\n    const result =\n      jsonXml['S:Envelope']['S:Body']['validateResponseOutput']['_attributes'][\n        'success'\n      ];\n    if (result === 'false') {\n      throw Error;\n    }\n    if (result === 'true') {\n      console.log('invoice validated');\n    }\n    next();\n  } catch (err) {\n    return {\n      res: res\n        .status(400)\n        .json({\n          message:\n            'Invalid invoice, must be PEPPOL standard org.oasis-open:invoice:2.1',\n        }),\n    };\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d45f3e1197d8a877942d86238b36edb5234a7d3e","contentHash":"0542cc720e7c1550ac80bcc66396e2b52d457d809d3a70388c36752b5e5cbcf0"},"/home/paul/Uni/seng2021/project/deployV2/src/controllers/invoiceController.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/controllers/invoiceController.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":171}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":49}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":45}},"4":{"start":{"line":6,"column":21},"end":{"line":16,"column":1}},"5":{"start":{"line":7,"column":23},"end":{"line":7,"column":31}},"6":{"start":{"line":8,"column":19},"end":{"line":8,"column":27}},"7":{"start":{"line":9,"column":4},"end":{"line":15,"column":5}},"8":{"start":{"line":10,"column":23},"end":{"line":10,"column":76}},"9":{"start":{"line":11,"column":8},"end":{"line":11,"column":25}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":77}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":36}},"12":{"start":{"line":18,"column":20},"end":{"line":29,"column":1}},"13":{"start":{"line":19,"column":22},"end":{"line":19,"column":42}},"14":{"start":{"line":20,"column":17},"end":{"line":20,"column":25}},"15":{"start":{"line":21,"column":4},"end":{"line":28,"column":5}},"16":{"start":{"line":22,"column":23},"end":{"line":22,"column":72}},"17":{"start":{"line":23,"column":8},"end":{"line":23,"column":51}},"18":{"start":{"line":24,"column":8},"end":{"line":24,"column":25}},"19":{"start":{"line":27,"column":8},"end":{"line":27,"column":77}},"20":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}},"21":{"start":{"line":31,"column":25},"end":{"line":42,"column":1}},"22":{"start":{"line":32,"column":21},"end":{"line":32,"column":53}},"23":{"start":{"line":33,"column":19},"end":{"line":33,"column":35}},"24":{"start":{"line":34,"column":19},"end":{"line":34,"column":27}},"25":{"start":{"line":35,"column":4},"end":{"line":41,"column":5}},"26":{"start":{"line":36,"column":23},"end":{"line":36,"column":86}},"27":{"start":{"line":37,"column":8},"end":{"line":37,"column":25}},"28":{"start":{"line":40,"column":8},"end":{"line":40,"column":77}},"29":{"start":{"line":43,"column":0},"end":{"line":43,"column":44}},"30":{"start":{"line":44,"column":22},"end":{"line":54,"column":1}},"31":{"start":{"line":45,"column":22},"end":{"line":45,"column":42}},"32":{"start":{"line":46,"column":19},"end":{"line":46,"column":27}},"33":{"start":{"line":47,"column":4},"end":{"line":53,"column":5}},"34":{"start":{"line":48,"column":23},"end":{"line":48,"column":76}},"35":{"start":{"line":49,"column":8},"end":{"line":49,"column":25}},"36":{"start":{"line":52,"column":8},"end":{"line":52,"column":77}},"37":{"start":{"line":55,"column":0},"end":{"line":55,"column":38}},"38":{"start":{"line":56,"column":23},"end":{"line":68,"column":1}},"39":{"start":{"line":57,"column":23},"end":{"line":57,"column":31}},"40":{"start":{"line":59,"column":22},"end":{"line":59,"column":41}},"41":{"start":{"line":60,"column":19},"end":{"line":60,"column":27}},"42":{"start":{"line":61,"column":4},"end":{"line":67,"column":5}},"43":{"start":{"line":62,"column":23},"end":{"line":62,"column":96}},"44":{"start":{"line":63,"column":8},"end":{"line":63,"column":25}},"45":{"start":{"line":66,"column":8},"end":{"line":66,"column":77}},"46":{"start":{"line":69,"column":0},"end":{"line":69,"column":40}},"47":{"start":{"line":70,"column":23},"end":{"line":82,"column":1}},"48":{"start":{"line":71,"column":22},"end":{"line":71,"column":41}},"49":{"start":{"line":72,"column":22},"end":{"line":72,"column":41}},"50":{"start":{"line":73,"column":19},"end":{"line":73,"column":27}},"51":{"start":{"line":74,"column":4},"end":{"line":81,"column":5}},"52":{"start":{"line":75,"column":23},"end":{"line":75,"column":94}},"53":{"start":{"line":76,"column":8},"end":{"line":76,"column":51}},"54":{"start":{"line":77,"column":8},"end":{"line":77,"column":25}},"55":{"start":{"line":80,"column":8},"end":{"line":80,"column":77}},"56":{"start":{"line":83,"column":0},"end":{"line":83,"column":40}},"57":{"start":{"line":84,"column":16},"end":{"line":92,"column":1}},"58":{"start":{"line":85,"column":4},"end":{"line":91,"column":5}},"59":{"start":{"line":86,"column":8},"end":{"line":86,"column":35}},"60":{"start":{"line":87,"column":8},"end":{"line":87,"column":59}},"61":{"start":{"line":90,"column":8},"end":{"line":90,"column":57}},"62":{"start":{"line":93,"column":0},"end":{"line":93,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":21},"end":{"line":6,"column":22}},"loc":{"start":{"line":6,"column":41},"end":{"line":16,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":20},"end":{"line":18,"column":21}},"loc":{"start":{"line":18,"column":40},"end":{"line":29,"column":1}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":25},"end":{"line":31,"column":26}},"loc":{"start":{"line":31,"column":45},"end":{"line":42,"column":1}},"line":31},"3":{"name":"(anonymous_3)","decl":{"start":{"line":44,"column":22},"end":{"line":44,"column":23}},"loc":{"start":{"line":44,"column":42},"end":{"line":54,"column":1}},"line":44},"4":{"name":"(anonymous_4)","decl":{"start":{"line":56,"column":23},"end":{"line":56,"column":24}},"loc":{"start":{"line":56,"column":43},"end":{"line":68,"column":1}},"line":56},"5":{"name":"(anonymous_5)","decl":{"start":{"line":70,"column":23},"end":{"line":70,"column":24}},"loc":{"start":{"line":70,"column":43},"end":{"line":82,"column":1}},"line":70},"6":{"name":"(anonymous_6)","decl":{"start":{"line":84,"column":16},"end":{"line":84,"column":17}},"loc":{"start":{"line":84,"column":36},"end":{"line":92,"column":1}},"line":84}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":19},"end":{"line":14,"column":42}},"type":"binary-expr","locations":[{"start":{"line":14,"column":19},"end":{"line":14,"column":35}},{"start":{"line":14,"column":39},"end":{"line":14,"column":42}}],"line":14},"1":{"loc":{"start":{"line":27,"column":19},"end":{"line":27,"column":42}},"type":"binary-expr","locations":[{"start":{"line":27,"column":19},"end":{"line":27,"column":35}},{"start":{"line":27,"column":39},"end":{"line":27,"column":42}}],"line":27},"2":{"loc":{"start":{"line":40,"column":19},"end":{"line":40,"column":42}},"type":"binary-expr","locations":[{"start":{"line":40,"column":19},"end":{"line":40,"column":35}},{"start":{"line":40,"column":39},"end":{"line":40,"column":42}}],"line":40},"3":{"loc":{"start":{"line":52,"column":19},"end":{"line":52,"column":42}},"type":"binary-expr","locations":[{"start":{"line":52,"column":19},"end":{"line":52,"column":35}},{"start":{"line":52,"column":39},"end":{"line":52,"column":42}}],"line":52},"4":{"loc":{"start":{"line":66,"column":19},"end":{"line":66,"column":42}},"type":"binary-expr","locations":[{"start":{"line":66,"column":19},"end":{"line":66,"column":35}},{"start":{"line":66,"column":39},"end":{"line":66,"column":42}}],"line":66},"5":{"loc":{"start":{"line":80,"column":19},"end":{"line":80,"column":42}},"type":"binary-expr","locations":[{"start":{"line":80,"column":19},"end":{"line":80,"column":35}},{"start":{"line":80,"column":39},"end":{"line":80,"column":42}}],"line":80}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":1,"58":0,"59":0,"60":0,"61":0,"62":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/controllers/invoiceController.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/controllers/invoiceController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Response, Request } from 'express';\nimport {\n  deleteInvoice,\n  showInvoice,\n  showRangeInvoice,\n  storeInvoice,\n  storeEncryptedInvoice,\n  showEncryptedInvoice,\n} from '../functions/invoice';\nimport { clear } from '../functions/clear';\n\nexport const invoiceStore = async (req: Request, res: Response) => {\n  const invoiceXML = req.body;\n  const userId = (req as any).user;\n  try {\n    const result = await storeInvoice(invoiceXML, userId);\n    res.json(result);\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n\nexport const invoiceShow = async (req: Request, res: Response) => {\n  const invoiceId = req.params.invoiceId;\n  const user = (req as any).user;\n  try {\n    const result = await showInvoice(invoiceId, user);\n    res.set('Content-Type', 'application/xml');\n    res.send(result);\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n\nexport const invoiceShowRange = async (req: Request, res: Response) => {\n  const quantity = parseInt(req.query.quantity as string, 10);\n  const filter = req.query.filter as string | undefined;\n  const userId = (req as any).user;\n\n  try {\n    const result = await showRangeInvoice(userId, quantity, filter);\n    res.send(result);\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n\nexport const invoiceDelete = async (req: Request, res: Response) => {\n  const invoiceId = req.params.invoiceId;\n  const userId = (req as any).user;\n\n  try {\n    const result = await deleteInvoice(invoiceId, userId);\n    res.json(result);\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n\nexport const invoiceEncrypt = async (req: Request, res: Response) => {\n  const invoiceXML = req.body;\n  // get the secret key from the request\n  const secretKey = req.query.secretKey as string;\n  const userId = (req as any).user;\n  try {\n    const result = await storeEncryptedInvoice(invoiceXML, userId, secretKey);\n    res.json(result);\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n\nexport const invoiceDecrypt = async (req: Request, res: Response) => {\n  const invoiceId = req.query.invoiceId as string;\n  const secretKey = req.query.secretKey as string;\n  const userId = (req as any).user;\n  try {\n    const result = await showEncryptedInvoice(invoiceId, userId, secretKey);\n    res.set('Content-Type', 'application/xml');\n    res.json(result);\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n\nexport const clearDb = async (req: Request, res: Response) => {\n  try {\n    await clear();\n    res.json({ message: 'All data has been deleted' });\n  } catch (error) {\n    res.status(500).json({ message: error.message });\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"389904c62e26df61ed8b12484ea0d18001f10b18","contentHash":"a2fed7f9fd1745f0ba65aeb49742dc9b191390fc85e44b13b8feb10e433716a4"},"/home/paul/Uni/seng2021/project/deployV2/src/functions/invoice.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/functions/invoice.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":166}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":48}},"5":{"start":{"line":8,"column":22},"end":{"line":8,"column":61}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":51}},"7":{"start":{"line":10,"column":23},"end":{"line":10,"column":57}},"8":{"start":{"line":11,"column":15},"end":{"line":11,"column":43}},"9":{"start":{"line":14,"column":32},"end":{"line":17,"column":6}},"10":{"start":{"line":19,"column":22},"end":{"line":19,"column":57}},"11":{"start":{"line":20,"column":23},"end":{"line":28,"column":5}},"12":{"start":{"line":29,"column":4},"end":{"line":34,"column":5}},"13":{"start":{"line":30,"column":8},"end":{"line":30,"column":53}},"14":{"start":{"line":33,"column":8},"end":{"line":33,"column":61}},"15":{"start":{"line":35,"column":4},"end":{"line":35,"column":36}},"16":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}},"17":{"start":{"line":40,"column":24},"end":{"line":40,"column":92}},"18":{"start":{"line":41,"column":4},"end":{"line":41,"column":66}},"19":{"start":{"line":44,"column":0},"end":{"line":44,"column":34}},"20":{"start":{"line":46,"column":21},"end":{"line":46,"column":65}},"21":{"start":{"line":48,"column":4},"end":{"line":53,"column":5}},"22":{"start":{"line":49,"column":8},"end":{"line":49,"column":102}},"23":{"start":{"line":52,"column":8},"end":{"line":52,"column":107}},"24":{"start":{"line":54,"column":23},"end":{"line":54,"column":25}},"25":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"26":{"start":{"line":56,"column":8},"end":{"line":56,"column":52}},"27":{"start":{"line":58,"column":4},"end":{"line":58,"column":36}},"28":{"start":{"line":60,"column":0},"end":{"line":60,"column":44}},"29":{"start":{"line":63,"column":4},"end":{"line":63,"column":73}},"30":{"start":{"line":65,"column":23},"end":{"line":65,"column":74}},"31":{"start":{"line":66,"column":4},"end":{"line":72,"column":5}},"32":{"start":{"line":67,"column":8},"end":{"line":67,"column":34}},"33":{"start":{"line":68,"column":8},"end":{"line":68,"column":59}},"34":{"start":{"line":71,"column":8},"end":{"line":71,"column":61}},"35":{"start":{"line":74,"column":0},"end":{"line":74,"column":38}},"36":{"start":{"line":76,"column":32},"end":{"line":76,"column":68}},"37":{"start":{"line":77,"column":4},"end":{"line":77,"column":59}},"38":{"start":{"line":79,"column":0},"end":{"line":79,"column":54}},"39":{"start":{"line":82,"column":4},"end":{"line":87,"column":5}},"40":{"start":{"line":83,"column":8},"end":{"line":83,"column":91}},"41":{"start":{"line":86,"column":8},"end":{"line":86,"column":67}},"42":{"start":{"line":88,"column":32},"end":{"line":88,"column":80}},"43":{"start":{"line":89,"column":4},"end":{"line":89,"column":63}},"44":{"start":{"line":91,"column":0},"end":{"line":91,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"storeInvoice","decl":{"start":{"line":12,"column":15},"end":{"line":12,"column":27}},"loc":{"start":{"line":12,"column":48},"end":{"line":36,"column":1}},"line":12},"2":{"name":"showInvoice","decl":{"start":{"line":38,"column":15},"end":{"line":38,"column":26}},"loc":{"start":{"line":38,"column":46},"end":{"line":43,"column":1}},"line":38},"3":{"name":"showRangeInvoice","decl":{"start":{"line":45,"column":15},"end":{"line":45,"column":31}},"loc":{"start":{"line":45,"column":58},"end":{"line":59,"column":1}},"line":45},"4":{"name":"deleteInvoice","decl":{"start":{"line":61,"column":15},"end":{"line":61,"column":28}},"loc":{"start":{"line":61,"column":48},"end":{"line":73,"column":1}},"line":61},"5":{"name":"storeEncryptedInvoice","decl":{"start":{"line":75,"column":15},"end":{"line":75,"column":36}},"loc":{"start":{"line":75,"column":62},"end":{"line":78,"column":1}},"line":75},"6":{"name":"showEncryptedInvoice","decl":{"start":{"line":80,"column":15},"end":{"line":80,"column":35}},"loc":{"start":{"line":80,"column":60},"end":{"line":90,"column":1}},"line":80}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":48,"column":4},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":53,"column":5}},{"start":{"line":48,"column":4},"end":{"line":53,"column":5}}],"line":48}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,0]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/functions/invoice.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/functions/invoice.ts"],"names":[],"mappings":"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","sourcesContent":["import { db } from '../config/firebase';\nimport HTTPError from 'http-errors';\nimport { queryUserById } from '../service/UserTable';\nimport {\n  queryInvoiceByInvoiceId,\n  queryInvoicesByInvoiceId,\n  queryInvoicesByFilter,\n} from '../service/InvoiceTable';\n\nimport { encrypt, decrypt } from '../functions/util';\n\nasync function storeInvoice(invoiceXML: string, userId: string) {\n  // Get invoice and user information\n  const [userData, invoice] = await Promise.all([\n    queryUserById(userId),\n    db.collection('invoices'),\n  ]);\n\n  // Generate new Invoice object\n  const invoiceId = `${userId}_${new Date().getTime()}`;\n  const newInvoice = {\n    invoiceId: invoiceId,\n    invoiceXML: invoiceXML,\n    timeAdded: Math.floor(new Date().getTime() / 1000),\n    user: {\n      userId: userId,\n      companyName: userData.companyName,\n    },\n  };\n\n  try {\n    await invoice.doc(invoiceId).set(newInvoice);\n  } catch (error) {\n    throw HTTPError(500, error.message);\n  }\n\n  return { invoiceId: invoiceId };\n}\n\nasync function showInvoice(invoiceId: string, userId: string) {\n  // Get invoice and user information\n  const invoiceData = await queryInvoiceByInvoiceId(invoiceId, userId);\n\n  return { invoice: invoiceData.invoiceXML.replace(/\\n/g, '') };\n  // return { invoice: invoiceData.invoiceXML };\n}\n\nasync function showRangeInvoice(\n  userId: string,\n  quantity: number,\n  filter: string\n) {\n  const userData = await queryUserById(userId);\n  let invoices: any;\n  if (!filter) {\n    invoices = await queryInvoicesByInvoiceId(userData.companyName, quantity);\n  } else {\n    invoices = await queryInvoicesByFilter(\n      userData.companyName,\n      quantity,\n      filter\n    );\n  }\n\n  const noNewLines = [];\n  for (const invoice of invoices) {\n    noNewLines.push(invoice.replace(/\\n/g, ''));\n  }\n\n  return { invoices: noNewLines };\n}\n\nasync function deleteInvoice(invoiceId: string, userId: string) {\n  // Get invoice and user information\n  await queryInvoiceByInvoiceId(invoiceId, userId);\n  // Delete invoice\n  const invoiceRef = db.collection('invoices').doc(invoiceId);\n  try {\n    await invoiceRef.delete();\n    return { message: 'Invoice deleted successfully' };\n  } catch (error) {\n    throw HTTPError(500, error.message);\n  }\n}\n\nasync function storeEncryptedInvoice(\n  invoiceXML: string,\n  userId: string,\n  key: string\n) {\n  const encryptedInvoiceXML = encrypt(invoiceXML, key);\n  return await storeInvoice(encryptedInvoiceXML, userId);\n}\n\nasync function showEncryptedInvoice(\n  invoiceId: string,\n  userId: string,\n  key: string\n) {\n  let invoiceData: any;\n  try {\n    invoiceData = await queryInvoiceByInvoiceId(invoiceId, userId);\n  } catch {\n    throw HTTPError(403, 'Invoice not found');\n  }\n  const decryptedInvoiceXML = decrypt(invoiceData.invoiceXML, key);\n  return { invoice: decryptedInvoiceXML.replace(/\\n/g, '') };\n}\n\nexport {\n  showInvoice,\n  deleteInvoice,\n  showRangeInvoice,\n  storeInvoice,\n  storeEncryptedInvoice,\n  showEncryptedInvoice,\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"60ececfdfb58b4747170782732d3267260008c29","contentHash":"8c77aae7c0e0f57c7e3f036622166dd27d0379f11a89557f8fc02e296c8d6034"},"/home/paul/Uni/seng2021/project/deployV2/src/service/InvoiceTable.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/service/InvoiceTable.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":108}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":48}},"5":{"start":{"line":8,"column":22},"end":{"line":8,"column":61}},"6":{"start":{"line":9,"column":26},"end":{"line":9,"column":52}},"7":{"start":{"line":10,"column":20},"end":{"line":10,"column":42}},"8":{"start":{"line":12,"column":32},"end":{"line":32,"column":1}},"9":{"start":{"line":13,"column":4},"end":{"line":31,"column":5}},"10":{"start":{"line":14,"column":30},"end":{"line":17,"column":18}},"11":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"12":{"start":{"line":19,"column":12},"end":{"line":19,"column":71}},"13":{"start":{"line":21,"column":25},"end":{"line":21,"column":69}},"14":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"15":{"start":{"line":24,"column":12},"end":{"line":24,"column":96}},"16":{"start":{"line":27,"column":8},"end":{"line":27,"column":44}},"17":{"start":{"line":30,"column":8},"end":{"line":30,"column":70}},"18":{"start":{"line":33,"column":0},"end":{"line":33,"column":58}},"19":{"start":{"line":35,"column":33},"end":{"line":54,"column":1}},"20":{"start":{"line":36,"column":4},"end":{"line":53,"column":5}},"21":{"start":{"line":37,"column":25},"end":{"line":37,"column":27}},"22":{"start":{"line":38,"column":30},"end":{"line":38,"column":85}},"23":{"start":{"line":39,"column":8},"end":{"line":41,"column":11}},"24":{"start":{"line":40,"column":12},"end":{"line":40,"column":38}},"25":{"start":{"line":42,"column":28},"end":{"line":42,"column":30}},"26":{"start":{"line":43,"column":8},"end":{"line":48,"column":9}},"27":{"start":{"line":44,"column":12},"end":{"line":47,"column":13}},"28":{"start":{"line":45,"column":16},"end":{"line":45,"column":53}},"29":{"start":{"line":46,"column":16},"end":{"line":46,"column":27}},"30":{"start":{"line":49,"column":8},"end":{"line":49,"column":27}},"31":{"start":{"line":52,"column":8},"end":{"line":52,"column":61}},"32":{"start":{"line":55,"column":0},"end":{"line":55,"column":60}},"33":{"start":{"line":56,"column":30},"end":{"line":72,"column":1}},"34":{"start":{"line":57,"column":21},"end":{"line":57,"column":23}},"35":{"start":{"line":58,"column":26},"end":{"line":58,"column":81}},"36":{"start":{"line":59,"column":4},"end":{"line":61,"column":7}},"37":{"start":{"line":60,"column":8},"end":{"line":60,"column":34}},"38":{"start":{"line":62,"column":4},"end":{"line":71,"column":5}},"39":{"start":{"line":64,"column":12},"end":{"line":64,"column":64}},"40":{"start":{"line":66,"column":12},"end":{"line":66,"column":66}},"41":{"start":{"line":68,"column":12},"end":{"line":68,"column":75}},"42":{"start":{"line":70,"column":12},"end":{"line":70,"column":68}},"43":{"start":{"line":73,"column":0},"end":{"line":73,"column":54}},"44":{"start":{"line":74,"column":33},"end":{"line":95,"column":1}},"45":{"start":{"line":75,"column":19},"end":{"line":75,"column":52}},"46":{"start":{"line":76,"column":4},"end":{"line":94,"column":5}},"47":{"start":{"line":78,"column":8},"end":{"line":85,"column":11}},"48":{"start":{"line":80,"column":24},"end":{"line":80,"column":57}},"49":{"start":{"line":81,"column":24},"end":{"line":81,"column":57}},"50":{"start":{"line":82,"column":26},"end":{"line":82,"column":67}},"51":{"start":{"line":83,"column":26},"end":{"line":83,"column":67}},"52":{"start":{"line":84,"column":12},"end":{"line":84,"column":53}},"53":{"start":{"line":86,"column":34},"end":{"line":88,"column":49}},"54":{"start":{"line":88,"column":30},"end":{"line":88,"column":48}},"55":{"start":{"line":90,"column":8},"end":{"line":90,"column":33}},"56":{"start":{"line":93,"column":8},"end":{"line":93,"column":61}},"57":{"start":{"line":96,"column":35},"end":{"line":116,"column":1}},"58":{"start":{"line":97,"column":4},"end":{"line":115,"column":5}},"59":{"start":{"line":98,"column":23},"end":{"line":98,"column":56}},"60":{"start":{"line":99,"column":8},"end":{"line":106,"column":11}},"61":{"start":{"line":101,"column":24},"end":{"line":101,"column":57}},"62":{"start":{"line":102,"column":24},"end":{"line":102,"column":57}},"63":{"start":{"line":103,"column":28},"end":{"line":103,"column":91}},"64":{"start":{"line":104,"column":28},"end":{"line":104,"column":91}},"65":{"start":{"line":105,"column":12},"end":{"line":105,"column":37}},"66":{"start":{"line":107,"column":34},"end":{"line":109,"column":49}},"67":{"start":{"line":109,"column":30},"end":{"line":109,"column":48}},"68":{"start":{"line":111,"column":8},"end":{"line":111,"column":33}},"69":{"start":{"line":114,"column":8},"end":{"line":114,"column":61}},"70":{"start":{"line":117,"column":36},"end":{"line":137,"column":1}},"71":{"start":{"line":118,"column":4},"end":{"line":136,"column":5}},"72":{"start":{"line":119,"column":23},"end":{"line":119,"column":56}},"73":{"start":{"line":120,"column":8},"end":{"line":127,"column":11}},"74":{"start":{"line":122,"column":24},"end":{"line":122,"column":57}},"75":{"start":{"line":123,"column":24},"end":{"line":123,"column":57}},"76":{"start":{"line":124,"column":29},"end":{"line":124,"column":118}},"77":{"start":{"line":125,"column":29},"end":{"line":125,"column":118}},"78":{"start":{"line":126,"column":12},"end":{"line":126,"column":52}},"79":{"start":{"line":128,"column":34},"end":{"line":130,"column":49}},"80":{"start":{"line":130,"column":30},"end":{"line":130,"column":48}},"81":{"start":{"line":132,"column":8},"end":{"line":132,"column":33}},"82":{"start":{"line":135,"column":8},"end":{"line":135,"column":61}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":32},"end":{"line":12,"column":33}},"loc":{"start":{"line":12,"column":61},"end":{"line":32,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":35,"column":33},"end":{"line":35,"column":34}},"loc":{"start":{"line":35,"column":66},"end":{"line":54,"column":1}},"line":35},"3":{"name":"(anonymous_3)","decl":{"start":{"line":39,"column":30},"end":{"line":39,"column":31}},"loc":{"start":{"line":39,"column":39},"end":{"line":41,"column":9}},"line":39},"4":{"name":"(anonymous_4)","decl":{"start":{"line":56,"column":30},"end":{"line":56,"column":31}},"loc":{"start":{"line":56,"column":71},"end":{"line":72,"column":1}},"line":56},"5":{"name":"(anonymous_5)","decl":{"start":{"line":59,"column":26},"end":{"line":59,"column":27}},"loc":{"start":{"line":59,"column":35},"end":{"line":61,"column":5}},"line":59},"6":{"name":"(anonymous_6)","decl":{"start":{"line":74,"column":33},"end":{"line":74,"column":34}},"loc":{"start":{"line":74,"column":63},"end":{"line":95,"column":1}},"line":74},"7":{"name":"(anonymous_7)","decl":{"start":{"line":78,"column":22},"end":{"line":78,"column":23}},"loc":{"start":{"line":78,"column":46},"end":{"line":85,"column":9}},"line":78},"8":{"name":"(anonymous_8)","decl":{"start":{"line":88,"column":17},"end":{"line":88,"column":18}},"loc":{"start":{"line":88,"column":30},"end":{"line":88,"column":48}},"line":88},"9":{"name":"(anonymous_9)","decl":{"start":{"line":96,"column":35},"end":{"line":96,"column":36}},"loc":{"start":{"line":96,"column":65},"end":{"line":116,"column":1}},"line":96},"10":{"name":"(anonymous_10)","decl":{"start":{"line":99,"column":22},"end":{"line":99,"column":23}},"loc":{"start":{"line":99,"column":46},"end":{"line":106,"column":9}},"line":99},"11":{"name":"(anonymous_11)","decl":{"start":{"line":109,"column":17},"end":{"line":109,"column":18}},"loc":{"start":{"line":109,"column":30},"end":{"line":109,"column":48}},"line":109},"12":{"name":"(anonymous_12)","decl":{"start":{"line":117,"column":36},"end":{"line":117,"column":37}},"loc":{"start":{"line":117,"column":74},"end":{"line":137,"column":1}},"line":117},"13":{"name":"(anonymous_13)","decl":{"start":{"line":120,"column":22},"end":{"line":120,"column":23}},"loc":{"start":{"line":120,"column":46},"end":{"line":127,"column":9}},"line":120},"14":{"name":"(anonymous_14)","decl":{"start":{"line":130,"column":17},"end":{"line":130,"column":18}},"loc":{"start":{"line":130,"column":30},"end":{"line":130,"column":48}},"line":130}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},{"start":{"line":18,"column":8},"end":{"line":20,"column":9}}],"line":18},"4":{"loc":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},{"start":{"line":23,"column":8},"end":{"line":25,"column":9}}],"line":23},"5":{"loc":{"start":{"line":44,"column":12},"end":{"line":47,"column":13}},"type":"if","locations":[{"start":{"line":44,"column":12},"end":{"line":47,"column":13}},{"start":{"line":44,"column":12},"end":{"line":47,"column":13}}],"line":44},"6":{"loc":{"start":{"line":44,"column":16},"end":{"line":44,"column":74}},"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":56}},{"start":{"line":44,"column":60},"end":{"line":44,"column":74}}],"line":44},"7":{"loc":{"start":{"line":62,"column":4},"end":{"line":71,"column":5}},"type":"switch","locations":[{"start":{"line":63,"column":8},"end":{"line":64,"column":64}},{"start":{"line":65,"column":8},"end":{"line":66,"column":66}},{"start":{"line":67,"column":8},"end":{"line":68,"column":75}},{"start":{"line":69,"column":8},"end":{"line":70,"column":68}}],"line":62}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/service/InvoiceTable.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/service/InvoiceTable.ts"],"names":[],"mappings":"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","sourcesContent":["import { db } from '../config/firebase';\nimport HTTPError from 'http-errors';\nimport { XMLParser } from 'fast-xml-parser';\nimport { queryUserById } from './UserTable';\n\n// Used by invoiceShow: gets invoiceData\nexport const queryInvoiceByInvoiceId = async (\n  invoiceId: string,\n  userId: string\n) => {\n  try {\n    const querySnapshot = await db\n      .collection('invoices')\n      .where('invoiceId', '==', invoiceId)\n      .get();\n    if (querySnapshot.empty) {\n      throw HTTPError(400, 'Invoice not found');\n    }\n\n    const userData = await queryUserById(userId);\n    //Check if user has permissions to delete invoice (from the company)\n    if (\n      userData.companyName !== querySnapshot.docs[0].data().user.companyName\n    ) {\n      throw HTTPError(403, 'Forbidden: User cannot delete this invoice');\n    }\n\n    // check if user comapny = invoice companyName\n\n    return querySnapshot.docs[0].data();\n  } catch (error) {\n    throw HTTPError(error.status, error.message);\n  }\n};\n\n// Used by invoiceShowRange: gets invoiceData\nexport const queryInvoicesByInvoiceId = async (\n  companyName: string,\n  quantity: number\n) => {\n  try {\n    const invoices: any[] = [];\n    const querySnapshot = (await db.collection('invoices').get()).docs;\n    querySnapshot.forEach((doc) => {\n      invoices.push(doc.data());\n    });\n\n    const returnArray: any[] = [];\n    for (const invoice of invoices) {\n      if (invoice.user.companyName === companyName && quantity !== 0) {\n        returnArray.push(invoice.invoiceXML);\n        quantity--;\n      }\n    }\n\n    return returnArray;\n  } catch (error) {\n    throw HTTPError(500, error.message);\n  }\n};\n\nexport const queryInvoicesByFilter = async (\n  companyName: string,\n  quantity: number,\n  filter: string\n) => {\n  const invoices: any[] = [];\n  const querySnapshot = (await db.collection('invoices').get()).docs;\n\n  querySnapshot.forEach((doc) => {\n    invoices.push(doc.data());\n  });\n  switch (filter) {\n    case 'duedate':\n      return queryFilterInvoiceByDate(quantity, invoices);\n    case 'amount':\n      return queryFilterInvoiceByAmount(quantity, invoices);\n    case 'company':\n      return queryFilterInvoiceByCompany(quantity, invoices, filter);\n    default:\n      throw HTTPError(400, 'Invalid filter');\n  }\n};\n\nconst queryFilterInvoiceByDate = async (quantity: number, invoices: any[]) => {\n  const parser = new XMLParser();\n\n  try {\n    // sort based on closest date\n    invoices.sort((invoice1, invoice2) => {\n      // parse each invoice\n      let jObj1 = parser.parse(invoice1.invoiceXML);\n      let jObj2 = parser.parse(invoice2.invoiceXML);\n\n      const date1 = new Date(jObj1['Invoice']['cbc:DueDate']);\n      const date2 = new Date(jObj2['Invoice']['cbc:DueDate']);\n      return date1.getTime() - date2.getTime();\n    });\n\n    const sortedInvoiceXMLs = invoices\n      .slice(0, quantity)\n      .map((invoice) => invoice.invoiceXML);\n\n    // return the sorted invoice XML bodies wrapped in an object\n    return sortedInvoiceXMLs;\n  } catch (error) {\n    throw HTTPError(500, error.message);\n  }\n};\n\nconst queryFilterInvoiceByAmount = async (\n  quantity: number,\n  invoices: any[]\n) => {\n  try {\n    const parser = new XMLParser();\n\n    invoices.sort((invoice1, invoice2) => {\n      // parse each invoice\n      let jObj1 = parser.parse(invoice1.invoiceXML);\n      let jObj2 = parser.parse(invoice2.invoiceXML);\n      const amount1 =\n        jObj1['Invoice']['cac:LegalMonetaryTotal']['cbc:PayableAmount'];\n      const amount2 =\n        jObj2['Invoice']['cac:LegalMonetaryTotal']['cbc:PayableAmount'];\n      return amount2 - amount1;\n    });\n    const sortedInvoiceXMLs = invoices\n      .slice(0, quantity)\n      .map((invoice) => invoice.invoiceXML);\n\n    // return the sorted invoice XML bodies wrapped in an object\n    return sortedInvoiceXMLs;\n  } catch (error) {\n    throw HTTPError(500, error.message);\n  }\n};\n\nconst queryFilterInvoiceByCompany = async (\n  quantity: number,\n  invoices: any[],\n  filter: string\n) => {\n  try {\n    const parser = new XMLParser();\n\n    invoices.sort((invoice1, invoice2) => {\n      // parse each invoice\n      let jObj1 = parser.parse(invoice1.invoiceXML);\n      let jObj2 = parser.parse(invoice2.invoiceXML);\n      const company1 =\n        jObj1['Invoice']['cac:AccountingSupplierParty']['cac:Party'][\n          'cac:PartyName'\n        ]['cbc:Name'];\n      const company2 =\n        jObj2['Invoice']['cac:AccountingSupplierParty']['cac:Party'][\n          'cac:PartyName'\n        ]['cbc:Name'];\n      return company1.localeCompare(company2);\n    });\n    const sortedInvoiceXMLs = invoices\n      .slice(0, quantity)\n      .map((invoice) => invoice.invoiceXML);\n\n    // return the sorted invoice XML bodies wrapped in an object\n    return sortedInvoiceXMLs;\n  } catch (error) {\n    throw HTTPError(500, error.message);\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f9c4744910965c8b03cda1d3b73bc3313749d6f9","contentHash":"864f646733c8357ea06e10711342c830ac9e2c9aa62249967057a5a41dc63b10"},"/home/paul/Uni/seng2021/project/deployV2/src/functions/util.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/functions/util.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":9,"column":17},"end":{"line":9,"column":49}},"6":{"start":{"line":10,"column":16},"end":{"line":10,"column":80}},"7":{"start":{"line":11,"column":15},"end":{"line":11,"column":47}},"8":{"start":{"line":12,"column":19},"end":{"line":12,"column":74}},"9":{"start":{"line":13,"column":20},"end":{"line":13,"column":54}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":37}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":72}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":26}},"13":{"start":{"line":19,"column":4},"end":{"line":32,"column":5}},"14":{"start":{"line":20,"column":22},"end":{"line":20,"column":46}},"15":{"start":{"line":21,"column":21},"end":{"line":21,"column":54}},"16":{"start":{"line":22,"column":19},"end":{"line":22,"column":52}},"17":{"start":{"line":23,"column":26},"end":{"line":23,"column":41}},"18":{"start":{"line":24,"column":20},"end":{"line":24,"column":84}},"19":{"start":{"line":25,"column":25},"end":{"line":25,"column":82}},"20":{"start":{"line":26,"column":24},"end":{"line":26,"column":65}},"21":{"start":{"line":27,"column":8},"end":{"line":27,"column":44}},"22":{"start":{"line":28,"column":8},"end":{"line":28,"column":25}},"23":{"start":{"line":31,"column":8},"end":{"line":31,"column":50}},"24":{"start":{"line":34,"column":0},"end":{"line":34,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"encrypt","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":16}},"loc":{"start":{"line":8,"column":33},"end":{"line":16,"column":1}},"line":8},"2":{"name":"decrypt","decl":{"start":{"line":18,"column":9},"end":{"line":18,"column":16}},"loc":{"start":{"line":18,"column":42},"end":{"line":33,"column":1}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"f":{"0":1,"1":0,"2":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/functions/util.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/functions/util.ts"],"names":[],"mappings":";;;;;;AAAA,oDAA4B;AAG5B,SAAS,OAAO,CAAC,IAAY,EAAE,QAAgB;IAC7C,MAAM,IAAI,GAAG,gBAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IACpC,MAAM,GAAG,GAAG,gBAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;IACnE,MAAM,EAAE,GAAG,gBAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAClC,MAAM,MAAM,GAAG,gBAAM,CAAC,cAAc,CAAC,aAAa,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAE7D,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IACnD,SAAS,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAEjC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,SAAS,EAAE,CAAC;AACtE,CAAC;AAoBQ,0BAAO;AAlBhB,SAAS,OAAO,CAAC,aAAqB,EAAE,QAAgB;IACtD,IAAI;QACF,MAAM,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,CAAC;QAC/C,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,CAAC;QAC7C,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,MAAM,GAAG,GAAG,gBAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;QACnE,MAAM,QAAQ,GAAG,gBAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAEjE,IAAI,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAC1D,SAAS,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAEpC,OAAO,SAAS,CAAC;KAClB;IAAC,OAAO,KAAK,EAAE;QACd,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;KAC3C;AACH,CAAC;AAEiB,0BAAO","sourcesContent":["import crypto from 'crypto';\nimport HTTPError from 'http-errors';\n\nfunction encrypt(text: string, password: string) {\n  const salt = crypto.randomBytes(16);\n  const key = crypto.pbkdf2Sync(password, salt, 10000, 32, 'sha256');\n  const iv = crypto.randomBytes(16);\n  const cipher = crypto.createCipheriv('aes-256-cbc', key, iv);\n\n  let encrypted = cipher.update(text, 'utf8', 'hex');\n  encrypted += cipher.final('hex');\n\n  return `${salt.toString('hex')}:${iv.toString('hex')}:${encrypted}`;\n}\n\nfunction decrypt(encryptedText: string, password: string) {\n  try {\n    const parts = encryptedText.split(':');\n    const salt = Buffer.from(parts.shift(), 'hex');\n    const iv = Buffer.from(parts.shift(), 'hex');\n    const encrypted = parts.join(':');\n    const key = crypto.pbkdf2Sync(password, salt, 10000, 32, 'sha256');\n    const decipher = crypto.createDecipheriv('aes-256-cbc', key, iv);\n\n    let decrypted = decipher.update(encrypted, 'hex', 'utf8');\n    decrypted += decipher.final('utf8');\n\n    return decrypted;\n  } catch (error) {\n    throw new Error('Invalid decryption key');\n  }\n}\n\nexport { encrypt, decrypt };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"07eb8feca13fcf19565a35452ff907e3943e12fb","contentHash":"9cd49ea3a5ddd02cabf1732920f3a2c631ea874ccfb94f0c4780a2e7bf65fb8c"},"/home/paul/Uni/seng2021/project/deployV2/src/functions/clear.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/functions/clear.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":48}},"3":{"start":{"line":5,"column":14},"end":{"line":14,"column":1}},"4":{"start":{"line":6,"column":24},"end":{"line":6,"column":61}},"5":{"start":{"line":7,"column":4},"end":{"line":12,"column":8}},"6":{"start":{"line":8,"column":30},"end":{"line":8,"column":52}},"7":{"start":{"line":9,"column":8},"end":{"line":11,"column":12}},"8":{"start":{"line":10,"column":12},"end":{"line":10,"column":35}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":11}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":14},"end":{"line":5,"column":15}},"loc":{"start":{"line":5,"column":26},"end":{"line":14,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":38},"end":{"line":7,"column":39}},"loc":{"start":{"line":7,"column":60},"end":{"line":12,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":49},"end":{"line":9,"column":50}},"loc":{"start":{"line":9,"column":64},"end":{"line":11,"column":9}},"line":9}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"f":{"0":0,"1":0,"2":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/functions/clear.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/functions/clear.ts"],"names":[],"mappings":";;;AAAA,iDAAwC;AAExC,MAAM,KAAK,GAAG,KAAK,IAAI,EAAE;IACvB,MAAM,WAAW,GAAG,MAAM,aAAE,CAAC,eAAe,EAAE,CAAC;IAC/C,MAAM,OAAO,CAAC,GAAG,CACf,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,EAAE,EAAE;QACnC,MAAM,aAAa,GAAG,MAAM,UAAU,CAAC,GAAG,EAAE,CAAC;QAC7C,MAAM,OAAO,CAAC,GAAG,CACf,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;YACnC,MAAM,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QACzB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC,CAAC,CACH,CAAC;IACF,OAAO;AACT,CAAC,CAAC;AAEO,sBAAK","sourcesContent":["import { db } from '../config/firebase';\n\nconst clear = async () => {\n  const collections = await db.listCollections();\n  await Promise.all(\n    collections.map(async (collection) => {\n      const querySnapshot = await collection.get();\n      await Promise.all(\n        querySnapshot.docs.map(async (doc) => {\n          await doc.ref.delete();\n        })\n      );\n    })\n  );\n  return;\n};\n\nexport { clear };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9fca16860b7c00ee038a5f296ca435dff9ace642","contentHash":"cafb558a026032464e075316db310c3d5f6d5d875bd496c1fce1d577a656de67"},"/home/paul/Uni/seng2021/project/deployV2/src/routes/userRoutes.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/routes/userRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":65}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":38}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":48}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":51}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":25}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/routes/userRoutes.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/routes/userRoutes.ts"],"names":[],"mappings":";;AAAA,qCAAiC;AACjC,kEAAkE;AAElE,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,yBAAQ,CAAC,CAAC;AAE/B,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,wBAAO,CAAC,CAAC;AAElC,kBAAe,MAAM,CAAC","sourcesContent":["import { Router } from \"express\";\nimport { getUsers, getUser } from \"../controllers/userController\";\n\nconst router = Router();\n\nrouter.get(\"/users\", getUsers);\n\nrouter.get(\"/users/:id\", getUser);\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d06539a8b16897950f4523f823c2dc636cd3f845","contentHash":"1a84898ac2839ca3a4f5cca8997cd4f91349d1bd19c0986d55e6e47d3ac6cfc3"},"/home/paul/Uni/seng2021/project/deployV2/src/controllers/userController.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/controllers/userController.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":17},"end":{"line":13,"column":1}},"4":{"start":{"line":6,"column":4},"end":{"line":12,"column":5}},"5":{"start":{"line":7,"column":22},"end":{"line":7,"column":53}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":24}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":77}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":28}},"9":{"start":{"line":15,"column":16},"end":{"line":23,"column":1}},"10":{"start":{"line":16,"column":17},"end":{"line":16,"column":30}},"11":{"start":{"line":17,"column":4},"end":{"line":22,"column":5}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":54}},"13":{"start":{"line":21,"column":8},"end":{"line":21,"column":77}},"14":{"start":{"line":24,"column":0},"end":{"line":24,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":18}},"loc":{"start":{"line":5,"column":37},"end":{"line":13,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":16},"end":{"line":15,"column":17}},"loc":{"start":{"line":15,"column":36},"end":{"line":23,"column":1}},"line":15}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":19},"end":{"line":11,"column":42}},"type":"binary-expr","locations":[{"start":{"line":11,"column":19},"end":{"line":11,"column":35}},{"start":{"line":11,"column":39},"end":{"line":11,"column":42}}],"line":11},"1":{"loc":{"start":{"line":21,"column":19},"end":{"line":21,"column":42}},"type":"binary-expr","locations":[{"start":{"line":21,"column":19},"end":{"line":21,"column":35}},{"start":{"line":21,"column":39},"end":{"line":21,"column":42}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1},"f":{"0":0,"1":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/controllers/userController.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/controllers/userController.ts"],"names":[],"mappings":";;;AAEA,4CAA6D;AAEtD,MAAM,QAAQ,GAAG,KAAK,EAAE,GAAgB,EAAE,GAAa,EAAE,EAAE;IAChE,IAAI;QACF,MAAM,KAAK,GAAG,MAAM,IAAA,kBAAW,GAAE,CAAC;QAClC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACjB;IAAC,OAAO,KAAK,EAAE;QACd,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;KACtE;AACH,CAAC,CAAC;AAPW,QAAA,QAAQ,YAOnB;AAEK,MAAM,OAAO,GAAG,KAAK,EAAE,GAAgB,EAAE,GAAa,EAAE,EAAE;IAC/D,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAC3B,IAAI;QACF,GAAG,CAAC,IAAI,CAAC,MAAM,IAAA,kBAAW,EAAC,IAAI,CAAC,CAAC,CAAC;KACnC;IAAC,OAAO,KAAK,EAAE;QACd,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;KACtE;AACH,CAAC,CAAC;AAPW,QAAA,OAAO,WAOlB","sourcesContent":["import { Response } from 'express';\nimport { RequestUser } from '../models/user';\nimport { getAllUsers, getUserById } from '../functions/user';\n\nexport const getUsers = async (req: RequestUser, res: Response) => {\n  try {\n    const users = await getAllUsers();\n    res.json(users);\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n\nexport const getUser = async (req: RequestUser, res: Response) => {\n  const user = req.params.id;\n  try {\n    res.json(await getUserById(user));\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5639850b006338c7a5bc014c2e4f582c57b02ec9","contentHash":"96e67430cdfdb6a38ab5e50e5a2a3ee6810ad50c6a7a1df4de1ce757cff47914"},"/home/paul/Uni/seng2021/project/deployV2/src/functions/user.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/functions/user.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":51}},"4":{"start":{"line":7,"column":22},"end":{"line":7,"column":61}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":51}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":50}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}},"8":{"start":{"line":14,"column":17},"end":{"line":14,"column":61}},"9":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":64}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":16}},"12":{"start":{"line":20,"column":0},"end":{"line":20,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"getAllUsers","decl":{"start":{"line":9,"column":15},"end":{"line":9,"column":26}},"loc":{"start":{"line":9,"column":29},"end":{"line":11,"column":1}},"line":9},"2":{"name":"getUserById","decl":{"start":{"line":13,"column":15},"end":{"line":13,"column":26}},"loc":{"start":{"line":13,"column":35},"end":{"line":19,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},{"start":{"line":15,"column":4},"end":{"line":17,"column":5}}],"line":15}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1},"f":{"0":1,"1":0,"2":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,0]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/functions/user.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/functions/user.ts"],"names":[],"mappings":";;;;;;AAAA,8DAAoC;AACpC,oDAAoE;AAEpE,KAAK,UAAU,WAAW;IACxB,OAAO,MAAM,IAAA,yBAAa,GAAE,CAAC;AAC/B,CAAC;AAUQ,kCAAW;AARpB,KAAK,UAAU,WAAW,CAAC,MAAc;IACvC,MAAM,IAAI,GAAG,MAAM,IAAA,yBAAa,EAAC,MAAM,CAAC,CAAC;IACzC,IAAI,CAAC,IAAI,EAAE;QACT,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC;KACxC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAEqB,kCAAW","sourcesContent":["import HTTPError from 'http-errors';\nimport { queryAllUsers, queryUserById } from '../service/UserTable';\n\nasync function getAllUsers() {\n  return await queryAllUsers();\n}\n\nasync function getUserById(userId: string) {\n  const user = await queryUserById(userId);\n  if (!user) {\n    throw HTTPError(404, 'User not found');\n  }\n  return user;\n}\n\nexport { getAllUsers, getUserById };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"79e9d4fb561dcb609d2aa6e2ea92d88dd51ad562","contentHash":"347cb360f72a98366916816455318dc57b30cbe3302558a373a5e7de8de46d2d"},"/home/paul/Uni/seng2021/project/deployV2/src/routes/authRoutes.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/routes/authRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":61}},"3":{"start":{"line":5,"column":25},"end":{"line":5,"column":65}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":38}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":65}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":55}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":86}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":71}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":25}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/routes/authRoutes.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/routes/authRoutes.ts"],"names":[],"mappings":";;AAAA,qCAAiC;AACjC,8DAA2D;AAC3D,kEAKuC;AAEvC,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,6BAAY,CAAC,CAAC;AAEhD,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,0BAAS,CAAC,CAAC;AAEtC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,2BAAY,EAAE,2BAAU,CAAC,CAAC;AAEtD,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,gCAAe,CAAC,CAAC;AAEtD,kBAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\nimport { authenticate } from '../middlewares/authenticate';\nimport {\n  registerCompany,\n  registerUser,\n  loginUser,\n  logoutUser,\n} from '../controllers/authController';\n\nconst router = Router();\n\nrouter.post('/auth/registerUser', registerUser);\n\nrouter.post('/auth/login', loginUser);\n\nrouter.post('/auth/logout', authenticate, logoutUser);\n\nrouter.post('/auth/registerCompany', registerCompany);\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0852ea44bdd4590c2fd65ec96c437a29542c5c07","contentHash":"cdc253e0306760a0cd4dcc9ce750429cd185341d592f4bb49a939361268c1dbc"},"/home/paul/Uni/seng2021/project/deployV2/src/controllers/authController.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/controllers/authController.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":97}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":24},"end":{"line":14,"column":1}},"4":{"start":{"line":6,"column":61},"end":{"line":6,"column":69}},"5":{"start":{"line":7,"column":4},"end":{"line":13,"column":5}},"6":{"start":{"line":8,"column":23},"end":{"line":8,"column":106}},"7":{"start":{"line":9,"column":8},"end":{"line":9,"column":25}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":77}},"9":{"start":{"line":15,"column":0},"end":{"line":15,"column":42}},"10":{"start":{"line":16,"column":21},"end":{"line":25,"column":1}},"11":{"start":{"line":17,"column":50},"end":{"line":17,"column":58}},"12":{"start":{"line":18,"column":4},"end":{"line":24,"column":5}},"13":{"start":{"line":19,"column":23},"end":{"line":19,"column":88}},"14":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":77}},"16":{"start":{"line":26,"column":0},"end":{"line":26,"column":36}},"17":{"start":{"line":27,"column":18},"end":{"line":36,"column":1}},"18":{"start":{"line":28,"column":32},"end":{"line":28,"column":40}},"19":{"start":{"line":29,"column":4},"end":{"line":35,"column":5}},"20":{"start":{"line":30,"column":23},"end":{"line":30,"column":67}},"21":{"start":{"line":31,"column":8},"end":{"line":31,"column":25}},"22":{"start":{"line":34,"column":8},"end":{"line":34,"column":77}},"23":{"start":{"line":37,"column":0},"end":{"line":37,"column":30}},"24":{"start":{"line":38,"column":19},"end":{"line":48,"column":1}},"25":{"start":{"line":39,"column":18},"end":{"line":39,"column":35}},"26":{"start":{"line":40,"column":19},"end":{"line":40,"column":27}},"27":{"start":{"line":41,"column":4},"end":{"line":47,"column":5}},"28":{"start":{"line":42,"column":23},"end":{"line":42,"column":66}},"29":{"start":{"line":43,"column":8},"end":{"line":43,"column":25}},"30":{"start":{"line":46,"column":8},"end":{"line":46,"column":77}},"31":{"start":{"line":49,"column":0},"end":{"line":49,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":24},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":44},"end":{"line":14,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":21},"end":{"line":16,"column":22}},"loc":{"start":{"line":16,"column":41},"end":{"line":25,"column":1}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":18},"end":{"line":27,"column":19}},"loc":{"start":{"line":27,"column":38},"end":{"line":36,"column":1}},"line":27},"3":{"name":"(anonymous_3)","decl":{"start":{"line":38,"column":19},"end":{"line":38,"column":20}},"loc":{"start":{"line":38,"column":39},"end":{"line":48,"column":1}},"line":38}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":19},"end":{"line":12,"column":42}},"type":"binary-expr","locations":[{"start":{"line":12,"column":19},"end":{"line":12,"column":35}},{"start":{"line":12,"column":39},"end":{"line":12,"column":42}}],"line":12},"1":{"loc":{"start":{"line":23,"column":19},"end":{"line":23,"column":42}},"type":"binary-expr","locations":[{"start":{"line":23,"column":19},"end":{"line":23,"column":35}},{"start":{"line":23,"column":39},"end":{"line":23,"column":42}}],"line":23},"2":{"loc":{"start":{"line":34,"column":19},"end":{"line":34,"column":42}},"type":"binary-expr","locations":[{"start":{"line":34,"column":19},"end":{"line":34,"column":35}},{"start":{"line":34,"column":39},"end":{"line":34,"column":42}}],"line":34},"3":{"loc":{"start":{"line":46,"column":19},"end":{"line":46,"column":42}},"type":"binary-expr","locations":[{"start":{"line":46,"column":19},"end":{"line":46,"column":35}},{"start":{"line":46,"column":39},"end":{"line":46,"column":42}}],"line":46}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1},"f":{"0":0,"1":0,"2":0,"3":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/controllers/authController.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/controllers/authController.ts"],"names":[],"mappings":";;;AAEA,4CAK2B;AAEpB,MAAM,eAAe,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;IACnE,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,YAAY,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAClE,IAAI;QACF,MAAM,MAAM,GAAG,MAAM,IAAA,0BAAmB,EACtC,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,GAAG,CACJ,CAAC;QACF,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAClB;IAAC,OAAO,KAAK,EAAE;QACd,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;KACtE;AACH,CAAC,CAAC;AAbW,QAAA,eAAe,mBAa1B;AAEK,MAAM,YAAY,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;IAChE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IACvD,IAAI;QACF,MAAM,MAAM,GAAG,MAAM,IAAA,mBAAY,EAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;QACrE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAClB;IAAC,OAAO,KAAK,EAAE;QACd,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;KACtE;AACH,CAAC,CAAC;AARW,QAAA,YAAY,gBAQvB;AAEK,MAAM,SAAS,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;IAC7D,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IACrC,IAAI;QACF,MAAM,MAAM,GAAG,MAAM,IAAA,gBAAS,EAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAChD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAClB;IAAC,OAAO,KAAK,EAAE;QACd,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;KACtE;AACH,CAAC,CAAC;AARW,QAAA,SAAS,aAQpB;AAEK,MAAM,UAAU,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;IAC9D,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,MAAM,MAAM,GAAI,GAAW,CAAC,IAAI,CAAC;IACjC,IAAI;QACF,MAAM,MAAM,GAAG,MAAM,IAAA,iBAAU,EAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC/C,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAClB;IAAC,OAAO,KAAK,EAAE;QACd,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;KACtE;AACH,CAAC,CAAC;AATW,QAAA,UAAU,cASrB","sourcesContent":["import { Response, Request } from 'express';\n\nimport {\n  authRegisterCompany,\n  authRegister,\n  authLogin,\n  authLogout,\n} from '../functions/auth';\n\nexport const registerCompany = async (req: Request, res: Response) => {\n  const { companyName, companyEmail, numEmployees, ABN } = req.body;\n  try {\n    const result = await authRegisterCompany(\n      companyName,\n      companyEmail,\n      numEmployees,\n      ABN\n    );\n    res.json(result);\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n\nexport const registerUser = async (req: Request, res: Response) => {\n  const { email, password, name, companyKey } = req.body;\n  try {\n    const result = await authRegister(email, password, name, companyKey);\n    res.json(result);\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n\nexport const loginUser = async (req: Request, res: Response) => {\n  const { email, password } = req.body;\n  try {\n    const result = await authLogin(email, password);\n    res.json(result);\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n\nexport const logoutUser = async (req: Request, res: Response) => {\n  const token = req.headers.token as string;\n  const userId = (req as any).user;\n  try {\n    const result = await authLogout(userId, token);\n    res.json(result);\n  } catch (error) {\n    res.status(error.statusCode || 500).json({ message: error.message });\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c1d96286c1d5a9baa317a4bce53956675bd0f8db","contentHash":"3c0b5b7a29e2a637fa18fc162a523898775120018188cec45fc98be9241553df"},"/home/paul/Uni/seng2021/project/deployV2/src/functions/auth.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/functions/auth.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":0},"end":{"line":29,"column":101}},"28":{"start":{"line":30,"column":19},"end":{"line":30,"column":48}},"29":{"start":{"line":31,"column":20},"end":{"line":31,"column":51}},"30":{"start":{"line":32,"column":23},"end":{"line":32,"column":57}},"31":{"start":{"line":33,"column":23},"end":{"line":33,"column":63}},"32":{"start":{"line":34,"column":22},"end":{"line":34,"column":61}},"33":{"start":{"line":35,"column":17},"end":{"line":35,"column":51}},"34":{"start":{"line":36,"column":23},"end":{"line":36,"column":63}},"35":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"36":{"start":{"line":40,"column":8},"end":{"line":40,"column":66}},"37":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"38":{"start":{"line":43,"column":8},"end":{"line":43,"column":61}},"39":{"start":{"line":46,"column":31},"end":{"line":46,"column":90}},"40":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"41":{"start":{"line":48,"column":8},"end":{"line":48,"column":85}},"42":{"start":{"line":51,"column":19},"end":{"line":51,"column":76}},"43":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"44":{"start":{"line":53,"column":8},"end":{"line":53,"column":79}},"45":{"start":{"line":55,"column":4},"end":{"line":71,"column":5}},"46":{"start":{"line":56,"column":24},"end":{"line":56,"column":61}},"47":{"start":{"line":58,"column":27},"end":{"line":58,"column":64}},"48":{"start":{"line":59,"column":27},"end":{"line":65,"column":9}},"49":{"start":{"line":66,"column":8},"end":{"line":66,"column":55}},"50":{"start":{"line":67,"column":8},"end":{"line":67,"column":42}},"51":{"start":{"line":70,"column":8},"end":{"line":70,"column":61}},"52":{"start":{"line":73,"column":0},"end":{"line":73,"column":50}},"53":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"54":{"start":{"line":77,"column":8},"end":{"line":77,"column":67}},"55":{"start":{"line":80,"column":31},"end":{"line":80,"column":77}},"56":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"57":{"start":{"line":82,"column":8},"end":{"line":82,"column":77}},"58":{"start":{"line":85,"column":29},"end":{"line":85,"column":88}},"59":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"60":{"start":{"line":87,"column":8},"end":{"line":87,"column":76}},"61":{"start":{"line":89,"column":4},"end":{"line":126,"column":5}},"62":{"start":{"line":90,"column":21},"end":{"line":90,"column":54}},"63":{"start":{"line":91,"column":23},"end":{"line":91,"column":54}},"64":{"start":{"line":93,"column":27},"end":{"line":93,"column":29}},"65":{"start":{"line":94,"column":21},"end":{"line":94,"column":61}},"66":{"start":{"line":95,"column":21},"end":{"line":95,"column":62}},"67":{"start":{"line":97,"column":22},"end":{"line":99,"column":10}},"68":{"start":{"line":101,"column":30},"end":{"line":104,"column":18}},"69":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"70":{"start":{"line":106,"column":12},"end":{"line":106,"column":80}},"71":{"start":{"line":108,"column":28},"end":{"line":108,"column":56}},"72":{"start":{"line":109,"column":27},"end":{"line":116,"column":9}},"73":{"start":{"line":118,"column":8},"end":{"line":118,"column":47}},"74":{"start":{"line":119,"column":8},"end":{"line":122,"column":10}},"75":{"start":{"line":125,"column":8},"end":{"line":125,"column":61}},"76":{"start":{"line":128,"column":0},"end":{"line":128,"column":36}},"77":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"78":{"start":{"line":132,"column":8},"end":{"line":132,"column":67}},"79":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"80":{"start":{"line":136,"column":8},"end":{"line":136,"column":110}},"81":{"start":{"line":139,"column":26},"end":{"line":142,"column":14}},"82":{"start":{"line":143,"column":21},"end":{"line":143,"column":49}},"83":{"start":{"line":145,"column":18},"end":{"line":147,"column":6}},"84":{"start":{"line":149,"column":4},"end":{"line":149,"column":32}},"85":{"start":{"line":151,"column":4},"end":{"line":153,"column":7}},"86":{"start":{"line":154,"column":4},"end":{"line":157,"column":6}},"87":{"start":{"line":159,"column":0},"end":{"line":159,"column":30}},"88":{"start":{"line":163,"column":20},"end":{"line":163,"column":65}},"89":{"start":{"line":164,"column":20},"end":{"line":164,"column":39}},"90":{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},"91":{"start":{"line":166,"column":8},"end":{"line":166,"column":64}},"92":{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},"93":{"start":{"line":169,"column":8},"end":{"line":169,"column":73}},"94":{"start":{"line":172,"column":26},"end":{"line":172,"column":74}},"95":{"start":{"line":172,"column":62},"end":{"line":172,"column":73}},"96":{"start":{"line":174,"column":4},"end":{"line":174,"column":52}},"97":{"start":{"line":175,"column":4},"end":{"line":175,"column":54}},"98":{"start":{"line":177,"column":0},"end":{"line":177,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"authRegisterCompany","decl":{"start":{"line":37,"column":15},"end":{"line":37,"column":34}},"loc":{"start":{"line":37,"column":81},"end":{"line":72,"column":1}},"line":37},"8":{"name":"authRegister","decl":{"start":{"line":74,"column":15},"end":{"line":74,"column":27}},"loc":{"start":{"line":74,"column":63},"end":{"line":127,"column":1}},"line":74},"9":{"name":"authLogin","decl":{"start":{"line":129,"column":15},"end":{"line":129,"column":24}},"loc":{"start":{"line":129,"column":42},"end":{"line":158,"column":1}},"line":129},"10":{"name":"authLogout","decl":{"start":{"line":160,"column":15},"end":{"line":160,"column":25}},"loc":{"start":{"line":160,"column":41},"end":{"line":176,"column":1}},"line":160},"11":{"name":"(anonymous_11)","decl":{"start":{"line":172,"column":55},"end":{"line":172,"column":56}},"loc":{"start":{"line":172,"column":62},"end":{"line":172,"column":73}},"line":172}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},{"start":{"line":39,"column":4},"end":{"line":41,"column":5}}],"line":39},"20":{"loc":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},{"start":{"line":42,"column":4},"end":{"line":44,"column":5}}],"line":42},"21":{"loc":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},{"start":{"line":47,"column":4},"end":{"line":49,"column":5}}],"line":47},"22":{"loc":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},{"start":{"line":52,"column":4},"end":{"line":54,"column":5}}],"line":52},"23":{"loc":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},{"start":{"line":76,"column":4},"end":{"line":78,"column":5}}],"line":76},"24":{"loc":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},{"start":{"line":81,"column":4},"end":{"line":83,"column":5}}],"line":81},"25":{"loc":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},{"start":{"line":86,"column":4},"end":{"line":88,"column":5}}],"line":86},"26":{"loc":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},{"start":{"line":105,"column":8},"end":{"line":107,"column":9}}],"line":105},"27":{"loc":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},{"start":{"line":131,"column":4},"end":{"line":133,"column":5}}],"line":131},"28":{"loc":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},{"start":{"line":135,"column":4},"end":{"line":137,"column":5}}],"line":135},"29":{"loc":{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},{"start":{"line":165,"column":4},"end":{"line":167,"column":5}}],"line":165},"30":{"loc":{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},{"start":{"line":168,"column":4},"end":{"line":170,"column":5}}],"line":168}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":3,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1},"f":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":1,"6":3,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,0],"3":[1,0],"4":[1,1],"5":[0,1],"6":[1,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[1,0],"15":[1,1],"16":[1,1,1],"17":[0,3],"18":[3,3],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/functions/auth.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/functions/auth.ts"],"names":[],"mappings":"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","sourcesContent":["import { db } from '../config/firebase';\n\nimport { queryLoginValid, queryUserByEmail } from '../service/UserTable';\nimport {\n  queryCompanyExists,\n  queryCompanyByEmail,\n  queryUserByCompanyKey,\n} from '../service/CompanyTable';\nimport * as EmailValidator from 'email-validator';\nimport HTTPError from 'http-errors';\nimport bcrypt from 'bcrypt';\nimport jwt from 'jsonwebtoken';\n\nasync function authRegisterCompany(\n  companyName: string,\n  companyEmail: string,\n  numEmployees: number,\n  ABN: number\n) {\n  // invalid email\n  if (!EmailValidator.validate(companyEmail)) {\n    throw HTTPError(400, 'Email is invalid');\n  }\n\n  if (ABN.toString().length !== 11) {\n    throw HTTPError(400, 'ABN invalid');\n  }\n\n  // check if company email already exists\n  const companyEmailExists = await queryCompanyByEmail(companyEmail);\n  if (companyEmailExists) {\n    throw HTTPError(409, 'Company email is already registered');\n  }\n\n  // check if company already exists\n  const exists = await queryCompanyExists(companyName);\n  if (exists) {\n    throw HTTPError(409, 'Company is already registered');\n  }\n\n  try {\n    const company = db.collection('companies');\n\n    // not secure but helpful for early testing\n    const companyKey = 'K' + new Date().getTime().toString();\n\n    const newCompany = {\n      companyName: companyName,\n      companyEmail: companyEmail,\n      companyKey: companyKey,\n      numEmployees: numEmployees,\n      ABN: ABN,\n    };\n\n    await company.doc(companyName).set(newCompany);\n    return { companyKey: companyKey };\n  } catch (error) {\n    throw HTTPError(500, error.message);\n  }\n}\n\nasync function authRegister(\n  email: string,\n  password: string,\n  name: string,\n  companyKey: string\n) {\n  // invalid email\n  if (!EmailValidator.validate(email)) {\n    throw HTTPError(400, 'Email is invalid.');\n  }\n\n  //  check if email already exists\n  const emailAlreadyExists = await queryUserByEmail(email);\n  if (emailAlreadyExists) {\n    throw HTTPError(409, 'Email is already registered');\n  }\n\n  // invalid companyKey\n  const companyKeyExists = await queryUserByCompanyKey(companyKey);\n  if (!companyKeyExists) {\n    throw HTTPError(404, 'Company key does not exist');\n  }\n\n  try {\n    const user = db.collection('users');\n    const userId = new Date().getTime().toString();\n    // password encryption\n    const saltRounds = 10;\n    const salt = bcrypt.genSaltSync(saltRounds);\n    const hash = bcrypt.hashSync(password, salt);\n\n    // tokens\n    const token = jwt.sign({ userId: userId }, 'cheesecake', {\n      expiresIn: '1d',\n    });\n\n    //find companyName based on company key\n    const querySnapshot = await db\n      .collection('companies')\n      .where('companyKey', '==', companyKey)\n      .get();\n    if (querySnapshot.empty) {\n      throw HTTPError(404, 'Company key does not exist');\n    }\n    const companyData = querySnapshot.docs[0].data();\n\n    const userObject = {\n      userId,\n      email,\n      hash,\n      name,\n      companyName: companyData.companyName,\n      tokens: [token],\n    };\n\n    // set in database\n    await user.doc(userId).set(userObject);\n\n    return {\n      token: token,\n      userId: userId,\n    };\n  } catch (error) {\n    throw HTTPError(500, error.message);\n  }\n}\n\nasync function authLogin(email: string, password: string) {\n  // invalid email\n  if (!EmailValidator.validate(email)) {\n    throw HTTPError(400, 'Email is invalid.');\n  }\n\n  // Check is user with email exists\n  if (!(await queryLoginValid(email, password))) {\n    throw HTTPError(\n      401,\n      'User with this email does not exist or password is incorrect'\n    );\n  }\n\n  // Get userData\n  const querySnapshot = await db\n    .collection('users')\n    .where('email', '==', email)\n    .get();\n  const userData = querySnapshot.docs[0].data();\n\n  //Generate token\n  const token = jwt.sign({ userId: userData.userId }, 'cheesecake', {\n    expiresIn: '1d',\n  });\n\n  // Append new token to the existing token array\n  userData.tokens.push(token);\n\n  // Update user document in Firebase\n  await db.collection('users').doc(userData.userId).update({\n    tokens: userData.tokens,\n  });\n\n  return {\n    token: token,\n    userId: userData.userId,\n  };\n}\n\nasync function authLogout(userId: string, token: string) {\n  //Authenticate token\n\n  // find user in db\n  const userRef = db.collection('users').doc(userId);\n  const userDoc = await userRef.get();\n  if (!userDoc.exists) {\n    throw HTTPError(403, 'Invalid token.');\n  }\n\n  if (!userDoc.data().tokens.includes(token)) {\n    throw HTTPError(403, 'User already logged out');\n  }\n  // remove token from user object for that particular user\n  const updatedTokens = userDoc.data().tokens.filter((t: any) => t !== token);\n\n  // update user object in db\n  await userRef.update({ tokens: updatedTokens });\n\n  return { message: 'User logged out succesfully' };\n}\n\nexport { authRegister, authLogin, authLogout, authRegisterCompany };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"795f199035d7b7e800555b0871f8a0afc69506d2","contentHash":"26e27ab3af52f57cf921a0e6cfc6287e6c3896cbbc0ac92394aec5a5029bd17a"},"/home/paul/Uni/seng2021/project/deployV2/src/service/CompanyTable.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/service/CompanyTable.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":98}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":48}},"5":{"start":{"line":8,"column":22},"end":{"line":8,"column":61}},"6":{"start":{"line":10,"column":27},"end":{"line":27,"column":1}},"7":{"start":{"line":11,"column":4},"end":{"line":26,"column":5}},"8":{"start":{"line":12,"column":30},"end":{"line":15,"column":18}},"9":{"start":{"line":16,"column":8},"end":{"line":21,"column":9}},"10":{"start":{"line":17,"column":12},"end":{"line":17,"column":25}},"11":{"start":{"line":20,"column":12},"end":{"line":20,"column":24}},"12":{"start":{"line":24,"column":8},"end":{"line":24,"column":38}},"13":{"start":{"line":25,"column":8},"end":{"line":25,"column":61}},"14":{"start":{"line":28,"column":0},"end":{"line":28,"column":48}},"15":{"start":{"line":30,"column":28},"end":{"line":47,"column":1}},"16":{"start":{"line":31,"column":4},"end":{"line":46,"column":5}},"17":{"start":{"line":32,"column":30},"end":{"line":35,"column":18}},"18":{"start":{"line":36,"column":8},"end":{"line":41,"column":9}},"19":{"start":{"line":37,"column":12},"end":{"line":37,"column":25}},"20":{"start":{"line":40,"column":12},"end":{"line":40,"column":24}},"21":{"start":{"line":44,"column":8},"end":{"line":44,"column":38}},"22":{"start":{"line":45,"column":8},"end":{"line":45,"column":61}},"23":{"start":{"line":48,"column":0},"end":{"line":48,"column":50}},"24":{"start":{"line":50,"column":30},"end":{"line":67,"column":1}},"25":{"start":{"line":51,"column":4},"end":{"line":66,"column":5}},"26":{"start":{"line":52,"column":30},"end":{"line":55,"column":18}},"27":{"start":{"line":56,"column":8},"end":{"line":61,"column":9}},"28":{"start":{"line":57,"column":12},"end":{"line":57,"column":25}},"29":{"start":{"line":60,"column":12},"end":{"line":60,"column":24}},"30":{"start":{"line":64,"column":8},"end":{"line":64,"column":38}},"31":{"start":{"line":65,"column":8},"end":{"line":65,"column":61}},"32":{"start":{"line":68,"column":0},"end":{"line":68,"column":54}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":27},"end":{"line":10,"column":28}},"loc":{"start":{"line":10,"column":50},"end":{"line":27,"column":1}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":28},"end":{"line":30,"column":29}},"loc":{"start":{"line":30,"column":52},"end":{"line":47,"column":1}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":50,"column":30},"end":{"line":50,"column":31}},"loc":{"start":{"line":50,"column":53},"end":{"line":67,"column":1}},"line":50}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":16,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":21,"column":9}},{"start":{"line":16,"column":8},"end":{"line":21,"column":9}}],"line":16},"4":{"loc":{"start":{"line":36,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":41,"column":9}},{"start":{"line":36,"column":8},"end":{"line":41,"column":9}}],"line":36},"5":{"loc":{"start":{"line":56,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":61,"column":9}},{"start":{"line":56,"column":8},"end":{"line":61,"column":9}}],"line":56}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1},"f":{"0":1,"1":0,"2":0,"3":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/service/CompanyTable.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/service/CompanyTable.ts"],"names":[],"mappings":";;;;;;AAAA,iDAAwC;AACxC,8DAAoC;AAEpC,sBAAsB;AACf,MAAM,kBAAkB,GAAG,KAAK,EAAE,WAAmB,EAAE,EAAE;IAC9D,IAAI;QACF,MAAM,aAAa,GAAG,MAAM,aAAE;aAC3B,UAAU,CAAC,WAAW,CAAC;aACvB,KAAK,CAAC,aAAa,EAAE,IAAI,EAAE,WAAW,CAAC;aACvC,GAAG,EAAE,CAAC;QACT,IAAI,aAAa,CAAC,KAAK,EAAE;YACvB,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;KACrC;AACH,CAAC,CAAC;AAfW,QAAA,kBAAkB,sBAe7B;AAEF,wDAAwD;AACjD,MAAM,mBAAmB,GAAG,KAAK,EAAE,YAAoB,EAAE,EAAE;IAChE,IAAI;QACJ,MAAM,aAAa,GAAG,MAAM,aAAE;aAC3B,UAAU,CAAC,WAAW,CAAC;aACvB,KAAK,CAAC,cAAc,EAAE,IAAI,EAAE,YAAY,CAAC;aACzC,GAAG,EAAE,CAAC;QACT,IAAI,aAAa,CAAC,KAAK,EAAE;YACvB,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACA;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;KACrC;AACH,CAAC,CAAC;AAfW,QAAA,mBAAmB,uBAe9B;AAEF,6CAA6C;AACtC,MAAM,qBAAqB,GAAG,KAAK,EAAE,WAAmB,EAAE,EAAE;IACjE,IAAI;QACJ,MAAM,aAAa,GAAG,MAAM,aAAE;aAC3B,UAAU,CAAC,WAAW,CAAC;aACvB,KAAK,CAAC,YAAY,EAAE,IAAI,EAAE,WAAW,CAAC;aACtC,GAAG,EAAE,CAAC;QACT,IAAI,aAAa,CAAC,KAAK,EAAE;YACvB,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACA;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;KACrC;AACH,CAAC,CAAC;AAfW,QAAA,qBAAqB,yBAehC;AAEF,gDAAgD;AAChD,kEAAkE;AAClE,0BAA0B;AAC1B,qCAAqC;AACrC,kCAAkC;AAClC,QAAQ;AACR,sBAAsB;AACtB,KAAK;AAGL,iDAAiD;AACjD,kEAAkE;AAClE,+BAA+B;AAC/B,KAAK","sourcesContent":["import { db } from \"../config/firebase\";\nimport HTTPError from \"http-errors\";\n\n// For companyRegister\nexport const queryCompanyExists = async (companyName: string) => {\n  try {\n    const querySnapshot = await db\n      .collection(\"companies\")\n      .where(\"companyName\", \"==\", companyName)\n      .get();\n    if (querySnapshot.empty) {\n      return false;\n    } else {\n      return true;\n    }\n  } catch (error) {\n    console.log(\"Error querying\");\n    throw HTTPError(500, error.message);\n  }\n};\n\n// For company register: if company email already exists\nexport const queryCompanyByEmail = async (companyEmail: string) => {\n  try {\n  const querySnapshot = await db\n    .collection(\"companies\")\n    .where(\"companyEmail\", \"==\", companyEmail)\n    .get();\n  if (querySnapshot.empty) {\n    return false;\n  } else {\n    return true;\n  }\n  } catch (error) {\n    console.log(\"Error querying\");\n    throw HTTPError(500, error.message);\n  }\n};\n\n// For userRegister. checks if company exists\nexport const queryUserByCompanyKey = async (companyName: string) => {\n  try {\n  const querySnapshot = await db\n    .collection(\"companies\")\n    .where(\"companyKey\", \"==\", companyName)\n    .get();\n  if (querySnapshot.empty) {\n    return false;\n  } else {\n    return true;\n  }\n  } catch (error) {\n    console.log(\"Error querying\");\n    throw HTTPError(500, error.message);\n  }\n};\n\n// export const queryAllCompanys = async () => {\n//   const querySnapshot = await db.collection(\"companies\").get();\n//   const companies = [];\n//   querySnapshot.forEach((doc) => {\n//     companies.push(doc.data());\n//   });\n//   return companies;\n// };\n\n\n// export const queryCompanyCount = async () => {\n//   const querySnapshot = await db.collection(\"companies\").get();\n//   return querySnapshot.size;\n// };\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3f72c9642f3e8f5244f31843416905bfbd216147","contentHash":"25946e3f046b0210682e56c4612a4587fa424f27a95126d93b178d5c6120f635"},"/home/paul/Uni/seng2021/project/deployV2/src/swaggerOptions.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/swaggerOptions.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"5":{"start":{"line":9,"column":0},"end":{"line":17,"column":1}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":49}},"7":{"start":{"line":11,"column":4},"end":{"line":12,"column":80}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":43}},"9":{"start":{"line":16,"column":4},"end":{"line":16,"column":42}},"10":{"start":{"line":18,"column":0},"end":{"line":33,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":9,"column":0},"end":{"line":17,"column":1}},"type":"if","locations":[{"start":{"line":9,"column":0},"end":{"line":17,"column":1}},{"start":{"line":9,"column":0},"end":{"line":17,"column":1}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,1]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/swaggerOptions.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/swaggerOptions.ts"],"names":[],"mappings":";;;;;;AAAA,gDAAwB;AACxB,IAAI,UAAkB,CAAC;AAEvB,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;IACzC,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;IAC7C,UAAU;QACR,uEAAuE,CAAC;CAC3E;KAAM;IACL,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACvC,UAAU,GAAG,wBAAwB,CAAC;CACvC;AAEY,QAAA,OAAO,GAAG;IACrB,UAAU,EAAE;QACV,OAAO,EAAE,OAAO;QAChB,IAAI,EAAE;YACJ,KAAK,EAAE,WAAW;YAClB,OAAO,EAAE,OAAO;YAChB,WAAW,EAAE,sCAAsC;SACpD;QACD,OAAO,EAAE;YACP;gBACE,GAAG,EAAE,GAAG,UAAU,EAAE;aACrB;SACF;KACF;IACD,IAAI,EAAE,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;CAClD,CAAC;AAEF;;;;;;;;;;;;;;;;;;;GAmBG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6EG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6EG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuEG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsDG;AAEH;;;;;;;;;;;;;;;;;;;GAmBG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkEG;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+DG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6DG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4EG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0CG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCG","sourcesContent":["import path from 'path';\nlet swaggerUrl: string;\n\nif (process.env.NODE_ENV === 'production') {\n  console.log('Running db in production mode');\n  swaggerUrl =\n    'http://e-invoice-storage-api-dev.ap-southeast-2.elasticbeanstalk.com/';\n} else {\n  console.log('Running db in test mode');\n  swaggerUrl = 'http://127.0.0.1:3200/';\n}\n\nexport const options = {\n  definition: {\n    openapi: '3.0.0',\n    info: {\n      title: 'Tasks API',\n      version: '1.0.0',\n      description: 'A simple Express Invoice storage API',\n    },\n    servers: [\n      {\n        url: `${swaggerUrl}`,\n      },\n    ],\n  },\n  apis: [path.join(__dirname, 'swaggerOptions.js')],\n};\n\n/**\n * @swagger\n * /clear:\n *   delete:\n *     summary: Delete all users, companies, and invoices from the database\n *     tags: [Admin]\n *     responses:\n *       200:\n *         description: All data has been deleted from the database\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: A message indicating that all data has been deleted\n *       500:\n *         description: Internal server error\n */\n\n/**\n * @swagger\n * components:\n *  schemas:\n *    User:\n *      type: object\n *      properties:\n *        email:\n *          type: string\n *          pattern: '^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$'\n *          description: User's account email\n *        password:\n *          type: string\n *          minLength: 6\n *          description: An encrypted password used for logging in\n *        id:\n *          type: string\n *          description: An auto-generated ID of the user\n *        name:\n *          type: string\n *          description: The user's name\n *        companyKey:\n *          type: string\n *          description: The user's company name\n *      required: [email, password, name]\n *      example:\n *        email: z0000000@ad.unsw.edu.au\n *        password: password123\n *        name: John Smith\n *        companyKey: UNSW\n *        id: abc123def456\n *    Invoice:\n *      type: object\n *\n *\n */\n\n/**\n * @swagger\n * /auth/registerCompany:\n *   post:\n *     summary: Register a new company\n *     tags: [Authentication]\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *                companyEmail:\n *                  type: string\n *                  pattern: '^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$'\n *                  description: The email of the company's account\n *                companyName:\n *                  type: string\n *                  description: The name of the company\n *                numEmployees:\n *                  type: integer\n *                  description: The number of employees in the company\n *                ABN:\n *                  type: integer\n *                  description: The ABN of the company\n *           example:\n *             companyName: \"Acme Inc.\"\n *             companyEmail: \"admin@acme.com\"\n *             numEmployees: 50\n *             ABN: 12345678901\n *     responses:\n *       '200':\n *         description: Company registered successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 companyKey:\n *                   type: string\n *                   description: The unique key generated for the registered company\n *             example:\n *               companyKey: \"abc123\"\n *       '400':\n *         description: Bad request\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: Error message\n *                   example: Email is invalid.\n *       '409':\n *         description: Invalid request data\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: Error message\n *                   example: Company is already registered\n *       '500':\n *         description: Internal server error\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: Error message\n *                   example: An error occurred while processing the request.\n */\n\n/**\n * @swagger\n * /auth/registerUser:\n *   post:\n *     summary: Add a new user\n *     tags: [Authentication]\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/User'\n *           example:\n *            email: z0000000@ad.unsw.edu.au\n *            password: password123\n *            name: John Smith\n *            companyKey: K123456789\n *         application/xml:\n *           schema:\n *             type: string\n *     responses:\n *       '200':\n *         description: The user was successfully registered\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 token:\n *                   type: string\n *                   description: An authentication token for the registered user\n *                 userId:\n *                   type: string\n *                   description: The ID of the registered user\n *       '400':\n *         description: Bad request\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: Error message\n *                   example: Email is invalid.\n *       '409':\n *         description: Invalid request data\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: Error message\n *                   example: Email is already registered\n *       '404':\n *         description: Invalid request data\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: Error message\n *                   example: Company key does not exist\n *       '500':\n *         description: Internal server error\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: Error message.\n */\n\n/**\n * @swagger\n * /auth/login:\n *   post:\n *     summary: Login a user\n *     tags: [Authentication]\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               email:\n *                 type: string\n *                 pattern: '^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$'\n *                 description: User's account email\n *               password:\n *                 type: string\n *                 minLength: 6\n *                 description: An encrypted password used for logging in\n *           example:\n *             email: john.doe@example.com\n *             password: password123\n *     responses:\n *       '200':\n *         description: Successful login\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 token:\n *                   type: string\n *                   description: JWT token for authentication.\n *                 userId:\n *                   type: string\n *                   description: User ID of the logged in user.\n *       '400':\n *         description: Invalid email\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: Error message.\n *                   example: Email is invalid.\n *       '401':\n *         description: User with this email does not exist or password is incorrect\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: Error message.\n *                   example: User with this email does not exist or password is incorrect.\n *       '500':\n *         description: Internal server error\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: Error message.\n *                   example: An error occurred while processing the request.\n */\n\n/**\n * @swagger\n * /auth/logout:\n *   post:\n *     summary: Logout a user\n *     tags: [Authentication]\n *     parameters:\n *       - in: header\n *         name: token\n *         required: true\n *         schema:\n *           type: string\n *           description: JWT token for authentication.\n *     responses:\n *       '200':\n *         description: Successful logout\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               example: {\"message\": \"User logged out successfully\"}\n *       '401':\n *         description: Unauthorized - the provided token was invalid or expired\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: Error message.\n *                   example: Invalid token\n *       '403':\n *        description: Forbidden - the provided token was not for a user\n *        content:\n *          application/json:\n *            schema:\n *              type: object\n *              properties:\n *                message:\n *                  type: string\n *                  description: Error message.\n *                  example: User already logged out\n *       '500':\n *         description: Internal server error\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: Error message.\n *                   example: An error occurred while processing the request.\n */\n\n/**\n * @swagger\n * components:\n *   schemas:\n *     XmlModel:\n *       type: object\n *       properties:\n *         invoice:\n *           type: object\n *           properties:\n *             customer:\n *               type: string\n *             total:\n *               type: string\n *       example:\n *         invoice:\n *           customer: John Smith\n *           total: 50.00\n *\n */\n\n/**\n * @swagger\n * /invoice/store:\n *   post:\n *     summary: Store an invoice\n *     tags: [Invoices]\n *     parameters:\n *       - in: header\n *         name: token\n *         required: true\n *         description: An authorization token\n *         schema:\n *           type: string\n *     requestBody:\n *       required: true\n *       content:\n *         text/plain:\n *           schema:\n *             type: string\n *           example: |\n *            <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n *            <Invoice>\n *            <Customer>John Smith</Customer>\n *            <Total>50.00</Total>\n *            </Invoice>\n *     responses:\n *       '200':\n *         description: Successful storage\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 invoiceId:\n *                   type: string\n *                   description: An ID that corresponds to the invoice stored\n *       '400':\n *         description: Bad request - must be 2.1 UBL invoice format\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 error:\n *                   type: string\n *                   description: Bad request, invalid input\n *       '401':\n *         description: Unauthorized\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 error:\n *                   type: string\n *                   description: Unauthorized, invalid token\n *       '500':\n *         description: Unsuccessful storage, database full or connection error\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 error:\n *                   type: string\n *                   description: Unsuccessful storage, database full or connection error\n */\n/**\n * @swagger\n * /invoice/show/{invoiceId}:\n *   get:\n *     summary: Get details of an invoice in XML format\n *     tags: [Invoices]\n *     parameters:\n *       - in: header\n *         name: token\n *         required: true\n *         description: An authorization token\n *         schema:\n *           type: string\n *       - in: path\n *         name: invoiceId\n *         required: true\n *         description: The ID of the invoice to retrieve\n *         schema:\n *           type: string\n *     responses:\n *       200:\n *         description: The invoice details in XML format\n *         content:\n *          application/xml:\n *            schema:\n *              type: string\n *              format: xml\n *              example: |\n *                <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n *                <Invoice>\n *                <Customer>John Smith</Customer>\n *                <Total>50.00</Total>\n *                </Invoice>\n *       '403':\n *         description: Forbidden error, user cannot view this invoice\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 error:\n *                   type: string\n *                   description: Error message.\n *       '401':\n *         description: Unauthorized, invalid token\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 error:\n *                   type: string\n *                   description: Error message.\n *       '500':\n *         description: Unsuccessful storage, database full or connection error\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 error:\n *                   type: string\n *                   description: Error message.\n */\n\n/**\n * @swagger\n * /invoice/showRange:\n *   get:\n *     summary: Get details of a range of invoices in XML format\n *     tags: [Invoices]\n *     parameters:\n *       - in: header\n *         name: token\n *         required: true\n *         description: An authorization token\n *         schema:\n *           type: string\n *       - in: query\n *         name: quantity\n *         required: true\n *         description: The number of invoices to retrieve\n *         schema:\n *           type: integer\n *           minimum: 1\n *           maximum: 100\n *       - in: query\n *         name: filter\n *         required: false\n *         description: The field to sort by. Default is most recently stored\n *         schema:\n *           type: string\n *           enum: [amount, duedate, company]\n *     responses:\n *       200:\n *         description: The invoice details\n *         content:\n *           application/xml:\n *             schema:\n *               type: object\n *               properties:\n *                 invoices:\n *                   type: array\n *                   items:\n *                     type: string\n *                   description: The XML of the invoices\n *       401:\n *         description: Unauthorized access\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: Unauthorized access\n *       '500':\n *         description: Unsuccessful storage, database full or connection error\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 error:\n *                   type: string\n *                   description: Error message.\n */\n\n/**\n * @swagger\n * /invoice/delete:\n *   delete:\n *     summary: Delete an invoice\n *     tags: [Invoices]\n *     parameters:\n *       - in: header\n *         name: token\n *         required: true\n *         description: Authentication token\n *         schema:\n *           type: string\n *       - in: path\n *         name: invoiceId\n *         required: true\n *         description: The ID of the invoice to delete\n *         schema:\n *           type: string\n *           example: '0001'\n *     responses:\n *       200:\n *         description: The invoice was successfully deleted\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: Invoice deleted successfully\n *                   # Example message: 'Invoice 0001 deleted successfully'\n *       401:\n *         description: Unauthorized access\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: Unauthorized access\n *                   # Example message: 'Invalid or missing authentication token'\n *       403:\n *         description: User cannot delete this invoice\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: User cannot delete this invoice\n *                   # Example message: 'You are not authorized to delete this invoice'\n *       404:\n *         description: The invoice with the specified ID was not found\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: Invoice not found\n *                   # Example message: 'Invoice 0001 not found'\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   example: Internal server error\n *                   # Example message: 'An unexpected error occurred'\n */\n\n/**\n * @swagger\n * /invoice/encrypt:\n *   post:\n *     summary: Encrypt an invoice's XML content and return the encrypted XML as a string\n *     tags: [Invoices]\n *     parameters:\n *       - in: header\n *         name: token\n *         required: true\n *         description: An authorization token\n *         schema:\n *           type: string\n *       - in: query\n *         name: secretKey\n *         required: true\n *         description: The secret key to be used for encryption\n *         schema:\n *           type: string\n *     requestBody:\n *       required: true\n *       content:\n *         application/xml:\n *           schema:\n *             type: string\n *             format: xml\n *             example: |\n *               <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n *               <Invoice>\n *               <Customer>John Smith</Customer>\n *               <Total>50.00</Total>\n *               </Invoice>\n *     responses:\n *       200:\n *         description: The encrypted invoice XML as a string\n *         content:\n *           text/plain:\n *             schema:\n *               type: string\n *               example: \"SomeSecretKey\"\n *       400:\n *         description: Encryption failed due to invalid input or an incorrect secret key\n */\n\n/**\n * @swagger\n * /invoice/decrypt:\n *   get:\n *     summary: Decrypt an invoice and return the details in XML format\n *     tags: [Invoices]\n *     parameters:\n *       - in: header\n *         name: token\n *         required: true\n *         description: An authorization token\n *         schema:\n *           type: string\n *       - in: query\n *         name: invoiceId\n *         required: true\n *         description: The ID of the invoice to decrypt and retrieve\n *         schema:\n *           type: string\n *       - in: query\n *         name: secretKey\n *         required: true\n *         description: The secret key to use for decryption\n *         schema:\n *           type: string\n *     responses:\n *       200:\n *         description: The decrypted invoice details in XML format\n *         content:\n *          application/xml:\n *            schema:\n *              type: string\n *              format: xml\n *              example: |\n *                <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n *                <Invoice>\n *                <Customer>John Smith</Customer>\n *                <Total>50.00</Total>\n *                </Invoice>\n *       400:\n *         description: Decryption failed due to an incorrect key or invalid input\n */\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5580849e944966ad30257eee7afb5afb9a1eaaa2","contentHash":"ca40ef62de1743be93982211a99ce70884c4d74bf6d253f667145028d848fcfa"},"/home/paul/Uni/seng2021/project/deployV2/src/config/config.ts":{"path":"/home/paul/Uni/seng2021/project/deployV2/src/config/config.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"6":{"start":{"line":9,"column":13},"end":{"line":9,"column":37}},"7":{"start":{"line":10,"column":0},"end":{"line":13,"column":2}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":9,"column":13},"end":{"line":9,"column":37}},"type":"binary-expr","locations":[{"start":{"line":9,"column":13},"end":{"line":9,"column":29}},{"start":{"line":9,"column":33},"end":{"line":9,"column":37}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,1]},"inputSourceMap":{"version":3,"file":"/home/paul/Uni/seng2021/project/deployV2/src/config/config.ts","sources":["/home/paul/Uni/seng2021/project/deployV2/src/config/config.ts"],"names":[],"mappings":";;;;;;AAAA,oDAA4B;AAC5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAChB,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AACzB,QAAA,MAAM,GAAG;IACpB,IAAI,EAAE,IAAI;IACV,GAAG,EAAE,kBAAkB;CACxB,CAAC;AACF,kBAAe,cAAM,CAAC","sourcesContent":["import dotenv from \"dotenv\";\ndotenv.config();\nconst PORT = process.env.PORT || 3200;\nexport const config = {\n  port: PORT,\n  url: \"http://localhost\",\n};\nexport default config;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ff49f7350f7cb2c39b684eec77b93852ffb4de27","contentHash":"77456751713a22bc3334985f83f030947e810af0457d00cd07535908eb94a05e"}}